2025-02-24 00:57:59,530:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 00:57:59,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 00:57:59,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 00:57:59,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 00:58:20,381:INFO:PyCaret ClassificationExperiment
2025-02-24 00:58:20,381:INFO:Logging name: clf-default-name
2025-02-24 00:58:20,381:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-24 00:58:20,381:INFO:version 3.3.2
2025-02-24 00:58:20,381:INFO:Initializing setup()
2025-02-24 00:58:20,381:INFO:self.USI: 412f
2025-02-24 00:58:20,381:INFO:self._variable_keys: {'y_test', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'target_param', '_ml_usecase', 'pipeline', 'gpu_param', 'X_test', 'html_param', 'fold_shuffle_param', 'fix_imbalance', 'memory', 'idx', 'logging_param', 'USI', 'seed', 'data', 'X_train', 'fold_groups_param', 'is_multiclass', 'log_plots_param', 'y', 'exp_id', 'y_train', 'exp_name_log', 'X', 'fold_generator'}
2025-02-24 00:58:20,381:INFO:Checking environment
2025-02-24 00:58:20,381:INFO:python_version: 3.9.21
2025-02-24 00:58:20,381:INFO:python_build: ('main', 'Dec 11 2024 16:24:11')
2025-02-24 00:58:20,381:INFO:machine: x86_64
2025-02-24 00:58:20,381:INFO:platform: Linux-6.12.15-200.fc41.x86_64-x86_64-with-glibc2.40
2025-02-24 00:58:20,382:INFO:Memory: svmem(total=16464158720, available=4299423744, percent=73.9, used=8627826688, free=325926912, active=4834766848, inactive=9380098048, buffers=1228800, cached=7509176320, shared=3111034880, slab=758525952)
2025-02-24 00:58:20,384:INFO:Physical Core: 14
2025-02-24 00:58:20,384:INFO:Logical Core: 20
2025-02-24 00:58:20,384:INFO:Checking libraries
2025-02-24 00:58:20,385:INFO:System:
2025-02-24 00:58:20,385:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:24:11)  [GCC 11.2.0]
2025-02-24 00:58:20,385:INFO:executable: /home/ahmadnafim/anaconda3/envs/bcc_intern/bin/python
2025-02-24 00:58:20,385:INFO:   machine: Linux-6.12.15-200.fc41.x86_64-x86_64-with-glibc2.40
2025-02-24 00:58:20,385:INFO:PyCaret required dependencies:
2025-02-24 00:58:20,493:INFO:                 pip: 25.0
2025-02-24 00:58:20,493:INFO:          setuptools: 75.8.0
2025-02-24 00:58:20,493:INFO:             pycaret: 3.3.2
2025-02-24 00:58:20,493:INFO:             IPython: 8.18.1
2025-02-24 00:58:20,493:INFO:          ipywidgets: 8.1.5
2025-02-24 00:58:20,493:INFO:                tqdm: 4.67.1
2025-02-24 00:58:20,493:INFO:               numpy: 1.26.4
2025-02-24 00:58:20,493:INFO:              pandas: 2.1.4
2025-02-24 00:58:20,494:INFO:              jinja2: 3.1.5
2025-02-24 00:58:20,494:INFO:               scipy: 1.11.4
2025-02-24 00:58:20,494:INFO:              joblib: 1.3.2
2025-02-24 00:58:20,494:INFO:             sklearn: 1.4.2
2025-02-24 00:58:20,494:INFO:                pyod: 2.0.3
2025-02-24 00:58:20,494:INFO:            imblearn: 0.12.4
2025-02-24 00:58:20,494:INFO:   category_encoders: 2.6.4
2025-02-24 00:58:20,494:INFO:            lightgbm: 4.6.0
2025-02-24 00:58:20,494:INFO:               numba: 0.60.0
2025-02-24 00:58:20,494:INFO:            requests: 2.32.3
2025-02-24 00:58:20,494:INFO:          matplotlib: 3.7.5
2025-02-24 00:58:20,494:INFO:          scikitplot: 0.3.7
2025-02-24 00:58:20,494:INFO:         yellowbrick: 1.5
2025-02-24 00:58:20,494:INFO:              plotly: 5.24.1
2025-02-24 00:58:20,494:INFO:    plotly-resampler: Not installed
2025-02-24 00:58:20,494:INFO:             kaleido: 0.2.1
2025-02-24 00:58:20,494:INFO:           schemdraw: 0.15
2025-02-24 00:58:20,494:INFO:         statsmodels: 0.14.4
2025-02-24 00:58:20,494:INFO:              sktime: 0.26.0
2025-02-24 00:58:20,494:INFO:               tbats: 1.1.3
2025-02-24 00:58:20,494:INFO:            pmdarima: 2.0.4
2025-02-24 00:58:20,494:INFO:              psutil: 6.1.1
2025-02-24 00:58:20,494:INFO:          markupsafe: 3.0.2
2025-02-24 00:58:20,494:INFO:             pickle5: Not installed
2025-02-24 00:58:20,494:INFO:         cloudpickle: 3.1.1
2025-02-24 00:58:20,495:INFO:         deprecation: 2.1.0
2025-02-24 00:58:20,495:INFO:              xxhash: 3.5.0
2025-02-24 00:58:20,495:INFO:           wurlitzer: 3.1.1
2025-02-24 00:58:20,495:INFO:PyCaret optional dependencies:
2025-02-24 00:58:20,639:INFO:                shap: Not installed
2025-02-24 00:58:20,640:INFO:           interpret: Not installed
2025-02-24 00:58:20,640:INFO:                umap: Not installed
2025-02-24 00:58:20,640:INFO:     ydata_profiling: Not installed
2025-02-24 00:58:20,640:INFO:  explainerdashboard: Not installed
2025-02-24 00:58:20,640:INFO:             autoviz: Not installed
2025-02-24 00:58:20,640:INFO:           fairlearn: Not installed
2025-02-24 00:58:20,640:INFO:          deepchecks: Not installed
2025-02-24 00:58:20,640:INFO:             xgboost: 2.1.4
2025-02-24 00:58:20,640:INFO:            catboost: 1.2.7
2025-02-24 00:58:20,640:INFO:              kmodes: Not installed
2025-02-24 00:58:20,640:INFO:             mlxtend: Not installed
2025-02-24 00:58:20,640:INFO:       statsforecast: Not installed
2025-02-24 00:58:20,640:INFO:        tune_sklearn: Not installed
2025-02-24 00:58:20,640:INFO:                 ray: Not installed
2025-02-24 00:58:20,640:INFO:            hyperopt: Not installed
2025-02-24 00:58:20,641:INFO:              optuna: Not installed
2025-02-24 00:58:20,641:INFO:               skopt: Not installed
2025-02-24 00:58:20,641:INFO:              mlflow: Not installed
2025-02-24 00:58:20,641:INFO:              gradio: Not installed
2025-02-24 00:58:20,641:INFO:             fastapi: Not installed
2025-02-24 00:58:20,641:INFO:             uvicorn: Not installed
2025-02-24 00:58:20,641:INFO:              m2cgen: Not installed
2025-02-24 00:58:20,641:INFO:           evidently: Not installed
2025-02-24 00:58:20,641:INFO:               fugue: Not installed
2025-02-24 00:58:20,641:INFO:           streamlit: Not installed
2025-02-24 00:58:20,641:INFO:             prophet: Not installed
2025-02-24 00:58:20,641:INFO:None
2025-02-24 00:58:20,641:INFO:Set up data.
2025-02-24 00:58:31,115:INFO:PyCaret ClassificationExperiment
2025-02-24 00:58:31,116:INFO:Logging name: clf-default-name
2025-02-24 00:58:31,116:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-24 00:58:31,116:INFO:version 3.3.2
2025-02-24 00:58:31,116:INFO:Initializing setup()
2025-02-24 00:58:31,116:INFO:self.USI: 4d69
2025-02-24 00:58:31,116:INFO:self._variable_keys: {'y_test', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'target_param', '_ml_usecase', 'pipeline', 'gpu_param', 'X_test', 'html_param', 'fold_shuffle_param', 'fix_imbalance', 'memory', 'idx', 'logging_param', 'USI', 'seed', 'data', 'X_train', 'fold_groups_param', 'is_multiclass', 'log_plots_param', 'y', 'exp_id', 'y_train', 'exp_name_log', 'X', 'fold_generator'}
2025-02-24 00:58:31,116:INFO:Checking environment
2025-02-24 00:58:31,116:INFO:python_version: 3.9.21
2025-02-24 00:58:31,116:INFO:python_build: ('main', 'Dec 11 2024 16:24:11')
2025-02-24 00:58:31,116:INFO:machine: x86_64
2025-02-24 00:58:31,116:INFO:platform: Linux-6.12.15-200.fc41.x86_64-x86_64-with-glibc2.40
2025-02-24 00:58:31,117:INFO:Memory: svmem(total=16464158720, available=4255145984, percent=74.2, used=8676605952, free=233373696, active=4983619584, inactive=9387601920, buffers=1228800, cached=7552950272, shared=3107131392, slab=757743616)
2025-02-24 00:58:31,119:INFO:Physical Core: 14
2025-02-24 00:58:31,119:INFO:Logical Core: 20
2025-02-24 00:58:31,119:INFO:Checking libraries
2025-02-24 00:58:31,119:INFO:System:
2025-02-24 00:58:31,119:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:24:11)  [GCC 11.2.0]
2025-02-24 00:58:31,119:INFO:executable: /home/ahmadnafim/anaconda3/envs/bcc_intern/bin/python
2025-02-24 00:58:31,119:INFO:   machine: Linux-6.12.15-200.fc41.x86_64-x86_64-with-glibc2.40
2025-02-24 00:58:31,119:INFO:PyCaret required dependencies:
2025-02-24 00:58:31,119:INFO:                 pip: 25.0
2025-02-24 00:58:31,120:INFO:          setuptools: 75.8.0
2025-02-24 00:58:31,120:INFO:             pycaret: 3.3.2
2025-02-24 00:58:31,120:INFO:             IPython: 8.18.1
2025-02-24 00:58:31,120:INFO:          ipywidgets: 8.1.5
2025-02-24 00:58:31,120:INFO:                tqdm: 4.67.1
2025-02-24 00:58:31,120:INFO:               numpy: 1.26.4
2025-02-24 00:58:31,120:INFO:              pandas: 2.1.4
2025-02-24 00:58:31,121:INFO:              jinja2: 3.1.5
2025-02-24 00:58:31,121:INFO:               scipy: 1.11.4
2025-02-24 00:58:31,121:INFO:              joblib: 1.3.2
2025-02-24 00:58:31,121:INFO:             sklearn: 1.4.2
2025-02-24 00:58:31,121:INFO:                pyod: 2.0.3
2025-02-24 00:58:31,121:INFO:            imblearn: 0.12.4
2025-02-24 00:58:31,121:INFO:   category_encoders: 2.6.4
2025-02-24 00:58:31,121:INFO:            lightgbm: 4.6.0
2025-02-24 00:58:31,121:INFO:               numba: 0.60.0
2025-02-24 00:58:31,121:INFO:            requests: 2.32.3
2025-02-24 00:58:31,121:INFO:          matplotlib: 3.7.5
2025-02-24 00:58:31,121:INFO:          scikitplot: 0.3.7
2025-02-24 00:58:31,121:INFO:         yellowbrick: 1.5
2025-02-24 00:58:31,121:INFO:              plotly: 5.24.1
2025-02-24 00:58:31,122:INFO:    plotly-resampler: Not installed
2025-02-24 00:58:31,122:INFO:             kaleido: 0.2.1
2025-02-24 00:58:31,122:INFO:           schemdraw: 0.15
2025-02-24 00:58:31,122:INFO:         statsmodels: 0.14.4
2025-02-24 00:58:31,122:INFO:              sktime: 0.26.0
2025-02-24 00:58:31,122:INFO:               tbats: 1.1.3
2025-02-24 00:58:31,122:INFO:            pmdarima: 2.0.4
2025-02-24 00:58:31,122:INFO:              psutil: 6.1.1
2025-02-24 00:58:31,122:INFO:          markupsafe: 3.0.2
2025-02-24 00:58:31,122:INFO:             pickle5: Not installed
2025-02-24 00:58:31,122:INFO:         cloudpickle: 3.1.1
2025-02-24 00:58:31,122:INFO:         deprecation: 2.1.0
2025-02-24 00:58:31,122:INFO:              xxhash: 3.5.0
2025-02-24 00:58:31,122:INFO:           wurlitzer: 3.1.1
2025-02-24 00:58:31,122:INFO:PyCaret optional dependencies:
2025-02-24 00:58:31,123:INFO:                shap: Not installed
2025-02-24 00:58:31,123:INFO:           interpret: Not installed
2025-02-24 00:58:31,123:INFO:                umap: Not installed
2025-02-24 00:58:31,123:INFO:     ydata_profiling: Not installed
2025-02-24 00:58:31,123:INFO:  explainerdashboard: Not installed
2025-02-24 00:58:31,123:INFO:             autoviz: Not installed
2025-02-24 00:58:31,123:INFO:           fairlearn: Not installed
2025-02-24 00:58:31,123:INFO:          deepchecks: Not installed
2025-02-24 00:58:31,123:INFO:             xgboost: 2.1.4
2025-02-24 00:58:31,123:INFO:            catboost: 1.2.7
2025-02-24 00:58:31,123:INFO:              kmodes: Not installed
2025-02-24 00:58:31,123:INFO:             mlxtend: Not installed
2025-02-24 00:58:31,124:INFO:       statsforecast: Not installed
2025-02-24 00:58:31,124:INFO:        tune_sklearn: Not installed
2025-02-24 00:58:31,124:INFO:                 ray: Not installed
2025-02-24 00:58:31,124:INFO:            hyperopt: Not installed
2025-02-24 00:58:31,124:INFO:              optuna: Not installed
2025-02-24 00:58:31,124:INFO:               skopt: Not installed
2025-02-24 00:58:31,124:INFO:              mlflow: Not installed
2025-02-24 00:58:31,124:INFO:              gradio: Not installed
2025-02-24 00:58:31,124:INFO:             fastapi: Not installed
2025-02-24 00:58:31,124:INFO:             uvicorn: Not installed
2025-02-24 00:58:31,124:INFO:              m2cgen: Not installed
2025-02-24 00:58:31,124:INFO:           evidently: Not installed
2025-02-24 00:58:31,124:INFO:               fugue: Not installed
2025-02-24 00:58:31,124:INFO:           streamlit: Not installed
2025-02-24 00:58:31,124:INFO:             prophet: Not installed
2025-02-24 00:58:31,125:INFO:None
2025-02-24 00:58:31,125:INFO:Set up data.
2025-02-24 00:58:54,604:INFO:PyCaret ClassificationExperiment
2025-02-24 00:58:54,604:INFO:Logging name: clf-default-name
2025-02-24 00:58:54,604:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-24 00:58:54,604:INFO:version 3.3.2
2025-02-24 00:58:54,605:INFO:Initializing setup()
2025-02-24 00:58:54,605:INFO:self.USI: c597
2025-02-24 00:58:54,605:INFO:self._variable_keys: {'y_test', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'target_param', '_ml_usecase', 'pipeline', 'gpu_param', 'X_test', 'html_param', 'fold_shuffle_param', 'fix_imbalance', 'memory', 'idx', 'logging_param', 'USI', 'seed', 'data', 'X_train', 'fold_groups_param', 'is_multiclass', 'log_plots_param', 'y', 'exp_id', 'y_train', 'exp_name_log', 'X', 'fold_generator'}
2025-02-24 00:58:54,605:INFO:Checking environment
2025-02-24 00:58:54,605:INFO:python_version: 3.9.21
2025-02-24 00:58:54,605:INFO:python_build: ('main', 'Dec 11 2024 16:24:11')
2025-02-24 00:58:54,605:INFO:machine: x86_64
2025-02-24 00:58:54,605:INFO:platform: Linux-6.12.15-200.fc41.x86_64-x86_64-with-glibc2.40
2025-02-24 00:58:54,606:INFO:Memory: svmem(total=16464158720, available=4930945024, percent=70.1, used=8560476160, free=1049559040, active=4267556864, inactive=9115959296, buffers=974848, cached=6853148672, shared=2614571008, slab=757972992)
2025-02-24 00:58:54,607:INFO:Physical Core: 14
2025-02-24 00:58:54,607:INFO:Logical Core: 20
2025-02-24 00:58:54,607:INFO:Checking libraries
2025-02-24 00:58:54,608:INFO:System:
2025-02-24 00:58:54,608:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:24:11)  [GCC 11.2.0]
2025-02-24 00:58:54,608:INFO:executable: /home/ahmadnafim/anaconda3/envs/bcc_intern/bin/python
2025-02-24 00:58:54,608:INFO:   machine: Linux-6.12.15-200.fc41.x86_64-x86_64-with-glibc2.40
2025-02-24 00:58:54,608:INFO:PyCaret required dependencies:
2025-02-24 00:58:54,608:INFO:                 pip: 25.0
2025-02-24 00:58:54,608:INFO:          setuptools: 75.8.0
2025-02-24 00:58:54,608:INFO:             pycaret: 3.3.2
2025-02-24 00:58:54,608:INFO:             IPython: 8.18.1
2025-02-24 00:58:54,608:INFO:          ipywidgets: 8.1.5
2025-02-24 00:58:54,608:INFO:                tqdm: 4.67.1
2025-02-24 00:58:54,608:INFO:               numpy: 1.26.4
2025-02-24 00:58:54,608:INFO:              pandas: 2.1.4
2025-02-24 00:58:54,608:INFO:              jinja2: 3.1.5
2025-02-24 00:58:54,608:INFO:               scipy: 1.11.4
2025-02-24 00:58:54,608:INFO:              joblib: 1.3.2
2025-02-24 00:58:54,608:INFO:             sklearn: 1.4.2
2025-02-24 00:58:54,608:INFO:                pyod: 2.0.3
2025-02-24 00:58:54,608:INFO:            imblearn: 0.12.4
2025-02-24 00:58:54,609:INFO:   category_encoders: 2.6.4
2025-02-24 00:58:54,609:INFO:            lightgbm: 4.6.0
2025-02-24 00:58:54,609:INFO:               numba: 0.60.0
2025-02-24 00:58:54,609:INFO:            requests: 2.32.3
2025-02-24 00:58:54,609:INFO:          matplotlib: 3.7.5
2025-02-24 00:58:54,609:INFO:          scikitplot: 0.3.7
2025-02-24 00:58:54,609:INFO:         yellowbrick: 1.5
2025-02-24 00:58:54,609:INFO:              plotly: 5.24.1
2025-02-24 00:58:54,609:INFO:    plotly-resampler: Not installed
2025-02-24 00:58:54,609:INFO:             kaleido: 0.2.1
2025-02-24 00:58:54,609:INFO:           schemdraw: 0.15
2025-02-24 00:58:54,609:INFO:         statsmodels: 0.14.4
2025-02-24 00:58:54,609:INFO:              sktime: 0.26.0
2025-02-24 00:58:54,609:INFO:               tbats: 1.1.3
2025-02-24 00:58:54,609:INFO:            pmdarima: 2.0.4
2025-02-24 00:58:54,609:INFO:              psutil: 6.1.1
2025-02-24 00:58:54,609:INFO:          markupsafe: 3.0.2
2025-02-24 00:58:54,609:INFO:             pickle5: Not installed
2025-02-24 00:58:54,609:INFO:         cloudpickle: 3.1.1
2025-02-24 00:58:54,609:INFO:         deprecation: 2.1.0
2025-02-24 00:58:54,609:INFO:              xxhash: 3.5.0
2025-02-24 00:58:54,609:INFO:           wurlitzer: 3.1.1
2025-02-24 00:58:54,610:INFO:PyCaret optional dependencies:
2025-02-24 00:58:54,610:INFO:                shap: Not installed
2025-02-24 00:58:54,610:INFO:           interpret: Not installed
2025-02-24 00:58:54,610:INFO:                umap: Not installed
2025-02-24 00:58:54,610:INFO:     ydata_profiling: Not installed
2025-02-24 00:58:54,610:INFO:  explainerdashboard: Not installed
2025-02-24 00:58:54,610:INFO:             autoviz: Not installed
2025-02-24 00:58:54,610:INFO:           fairlearn: Not installed
2025-02-24 00:58:54,610:INFO:          deepchecks: Not installed
2025-02-24 00:58:54,610:INFO:             xgboost: 2.1.4
2025-02-24 00:58:54,610:INFO:            catboost: 1.2.7
2025-02-24 00:58:54,610:INFO:              kmodes: Not installed
2025-02-24 00:58:54,610:INFO:             mlxtend: Not installed
2025-02-24 00:58:54,610:INFO:       statsforecast: Not installed
2025-02-24 00:58:54,610:INFO:        tune_sklearn: Not installed
2025-02-24 00:58:54,610:INFO:                 ray: Not installed
2025-02-24 00:58:54,610:INFO:            hyperopt: Not installed
2025-02-24 00:58:54,610:INFO:              optuna: Not installed
2025-02-24 00:58:54,611:INFO:               skopt: Not installed
2025-02-24 00:58:54,611:INFO:              mlflow: Not installed
2025-02-24 00:58:54,611:INFO:              gradio: Not installed
2025-02-24 00:58:54,611:INFO:             fastapi: Not installed
2025-02-24 00:58:54,611:INFO:             uvicorn: Not installed
2025-02-24 00:58:54,611:INFO:              m2cgen: Not installed
2025-02-24 00:58:54,611:INFO:           evidently: Not installed
2025-02-24 00:58:54,611:INFO:               fugue: Not installed
2025-02-24 00:58:54,611:INFO:           streamlit: Not installed
2025-02-24 00:58:54,611:INFO:             prophet: Not installed
2025-02-24 00:58:54,611:INFO:None
2025-02-24 00:58:54,611:INFO:Set up data.
2025-02-24 00:58:54,727:INFO:Set up folding strategy.
2025-02-24 00:58:54,727:INFO:Set up train/test split.
2025-02-24 00:58:54,795:INFO:Set up index.
2025-02-24 00:58:54,796:INFO:Assigning column types.
2025-02-24 00:58:54,813:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-24 00:58:54,953:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-24 00:58:54,962:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 00:58:55,056:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 00:58:55,063:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 00:58:55,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-24 00:58:55,253:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 00:58:55,306:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 00:58:55,311:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 00:58:55,312:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-24 00:58:55,404:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 00:58:55,459:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 00:58:55,464:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 00:58:55,550:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 00:58:55,603:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 00:58:55,608:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 00:58:55,608:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-24 00:58:55,737:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 00:58:55,742:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 00:58:55,879:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 00:58:55,884:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 00:58:55,887:INFO:Preparing preprocessing pipeline...
2025-02-24 00:58:55,890:INFO:Set up label encoding.
2025-02-24 00:58:55,891:INFO:Set up simple imputation.
2025-02-24 00:58:55,904:INFO:Set up encoding of categorical features.
2025-02-24 00:58:58,881:INFO:Finished creating preprocessing pipeline.
2025-02-24 00:58:58,899:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              kee...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-02-24 00:58:58,899:INFO:Creating final display dataframe.
2025-02-24 00:59:01,985:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10     Rows with missing values   
11                   Preprocess   
12              Imputation type   
13           Numeric imputation   
14       Categorical imputation   
15     Maximum one-hot encoding   
16              Encoding method   
17               Fold Generator   
18                  Fold Number   
19                     CPU Jobs   
20                      Use GPU   
21               Log Experiment   
22              Experiment Name   
23                          USI   

                                                Value  
0                                                 123  
1                                   Accident_severity  
2                                          Multiclass  
3   Fatal injury: 0, Serious Injury: 1, Slight Inj...  
4                                         (12316, 32)  
5                                        (12316, 206)  
6                                         (8621, 206)  
7                                         (3695, 206)  
8                                                   2  
9                                                  29  
10                                              76.5%  
11                                               True  
12                                             simple  
13                                               mean  
14                                               mode  
15                                                 25  
16                                               None  
17                                    StratifiedKFold  
18                                                 10  
19                                                 -1  
20                                              False  
21                                              False  
22                                   clf-default-name  
23                                               c597  
2025-02-24 00:59:02,153:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 00:59:02,159:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 00:59:02,327:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 00:59:02,333:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 00:59:02,337:INFO:setup() successfully completed in 7.73s...............
2025-02-24 00:59:02,337:INFO:Initializing compare_models()
2025-02-24 00:59:02,337:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-02-24 00:59:02,338:INFO:Checking exceptions
2025-02-24 00:59:02,351:INFO:Preparing display monitor
2025-02-24 00:59:02,414:INFO:Initializing Logistic Regression
2025-02-24 00:59:02,415:INFO:Total runtime is 1.6399224599202474e-05 minutes
2025-02-24 00:59:02,428:INFO:SubProcess create_model() called ==================================
2025-02-24 00:59:02,429:INFO:Initializing create_model()
2025-02-24 00:59:02,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 00:59:02,429:INFO:Checking exceptions
2025-02-24 00:59:02,429:INFO:Importing libraries
2025-02-24 00:59:02,429:INFO:Copying training dataset
2025-02-24 00:59:02,453:INFO:Defining folds
2025-02-24 00:59:02,453:INFO:Declaring metric variables
2025-02-24 00:59:02,463:INFO:Importing untrained model
2025-02-24 00:59:02,478:INFO:Logistic Regression Imported successfully
2025-02-24 00:59:02,500:INFO:Starting cross validation
2025-02-24 00:59:02,518:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 00:59:19,923:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:19,944:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:19,981:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:20,018:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:20,338:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:20,349:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:20,372:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:20,392:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:20,427:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:20,438:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:20,457:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:20,475:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:21,386:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:21,397:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:21,415:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:21,430:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:21,437:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:21,442:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:21,461:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:21,472:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:21,481:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:21,694:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:21,704:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:21,724:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:21,735:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:21,745:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:22,433:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:22,444:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:22,460:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:22,475:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:22,872:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:22,878:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:22,891:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:22,905:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:23,558:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:23,565:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:23,580:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:23,588:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:23,594:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:23,606:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:23,613:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:23,626:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:23,640:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:23,669:INFO:Calculating mean and std
2025-02-24 00:59:23,675:INFO:Creating metrics dataframe
2025-02-24 00:59:23,687:INFO:Uploading results into container
2025-02-24 00:59:23,689:INFO:Uploading model into container now
2025-02-24 00:59:23,691:INFO:_master_model_container: 1
2025-02-24 00:59:23,692:INFO:_display_container: 2
2025-02-24 00:59:23,694:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-24 00:59:23,694:INFO:create_model() successfully completed......................................
2025-02-24 00:59:23,946:INFO:SubProcess create_model() end ==================================
2025-02-24 00:59:23,947:INFO:Creating metrics dataframe
2025-02-24 00:59:23,965:INFO:Initializing K Neighbors Classifier
2025-02-24 00:59:23,965:INFO:Total runtime is 0.35918327172597253 minutes
2025-02-24 00:59:23,974:INFO:SubProcess create_model() called ==================================
2025-02-24 00:59:23,975:INFO:Initializing create_model()
2025-02-24 00:59:23,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 00:59:23,975:INFO:Checking exceptions
2025-02-24 00:59:23,975:INFO:Importing libraries
2025-02-24 00:59:23,975:INFO:Copying training dataset
2025-02-24 00:59:23,995:INFO:Defining folds
2025-02-24 00:59:23,995:INFO:Declaring metric variables
2025-02-24 00:59:24,003:INFO:Importing untrained model
2025-02-24 00:59:24,014:INFO:K Neighbors Classifier Imported successfully
2025-02-24 00:59:24,034:INFO:Starting cross validation
2025-02-24 00:59:24,050:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 00:59:32,517:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:32,520:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:32,537:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:32,543:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:32,554:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:32,558:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:32,564:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:32,790:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:32,811:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:32,821:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:32,831:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:32,932:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:32,951:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:32,979:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:33,142:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:33,161:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:33,181:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:33,469:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:33,487:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:33,509:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:33,636:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:33,651:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:33,663:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:34,127:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:34,142:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:34,159:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:34,234:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:34,247:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:34,262:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:34,263:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:34,280:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:34,289:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:34,297:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:34,324:INFO:Calculating mean and std
2025-02-24 00:59:34,326:INFO:Creating metrics dataframe
2025-02-24 00:59:34,331:INFO:Uploading results into container
2025-02-24 00:59:34,332:INFO:Uploading model into container now
2025-02-24 00:59:34,333:INFO:_master_model_container: 2
2025-02-24 00:59:34,334:INFO:_display_container: 2
2025-02-24 00:59:34,334:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-24 00:59:34,334:INFO:create_model() successfully completed......................................
2025-02-24 00:59:34,515:INFO:SubProcess create_model() end ==================================
2025-02-24 00:59:34,516:INFO:Creating metrics dataframe
2025-02-24 00:59:34,529:INFO:Initializing Naive Bayes
2025-02-24 00:59:34,529:INFO:Total runtime is 0.5352545301119487 minutes
2025-02-24 00:59:34,537:INFO:SubProcess create_model() called ==================================
2025-02-24 00:59:34,538:INFO:Initializing create_model()
2025-02-24 00:59:34,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 00:59:34,538:INFO:Checking exceptions
2025-02-24 00:59:34,539:INFO:Importing libraries
2025-02-24 00:59:34,539:INFO:Copying training dataset
2025-02-24 00:59:34,557:INFO:Defining folds
2025-02-24 00:59:34,557:INFO:Declaring metric variables
2025-02-24 00:59:34,564:INFO:Importing untrained model
2025-02-24 00:59:34,573:INFO:Naive Bayes Imported successfully
2025-02-24 00:59:34,591:INFO:Starting cross validation
2025-02-24 00:59:34,608:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 00:59:37,944:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:37,964:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:37,986:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,018:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,041:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,067:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,170:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,193:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,214:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,260:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,283:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,308:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,438:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,458:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,463:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,478:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,483:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,502:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,920:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,932:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,945:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,973:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:38,986:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:39,001:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:39,182:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:39,185:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:39,195:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:39,198:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:39,209:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:39,211:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:39,235:INFO:Calculating mean and std
2025-02-24 00:59:39,237:INFO:Creating metrics dataframe
2025-02-24 00:59:39,241:INFO:Uploading results into container
2025-02-24 00:59:39,243:INFO:Uploading model into container now
2025-02-24 00:59:39,243:INFO:_master_model_container: 3
2025-02-24 00:59:39,244:INFO:_display_container: 2
2025-02-24 00:59:39,244:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-24 00:59:39,244:INFO:create_model() successfully completed......................................
2025-02-24 00:59:39,425:INFO:SubProcess create_model() end ==================================
2025-02-24 00:59:39,426:INFO:Creating metrics dataframe
2025-02-24 00:59:39,463:INFO:Initializing Decision Tree Classifier
2025-02-24 00:59:39,463:INFO:Total runtime is 0.6174864013989767 minutes
2025-02-24 00:59:39,472:INFO:SubProcess create_model() called ==================================
2025-02-24 00:59:39,472:INFO:Initializing create_model()
2025-02-24 00:59:39,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 00:59:39,472:INFO:Checking exceptions
2025-02-24 00:59:39,472:INFO:Importing libraries
2025-02-24 00:59:39,473:INFO:Copying training dataset
2025-02-24 00:59:39,496:INFO:Defining folds
2025-02-24 00:59:39,497:INFO:Declaring metric variables
2025-02-24 00:59:39,505:INFO:Importing untrained model
2025-02-24 00:59:39,515:INFO:Decision Tree Classifier Imported successfully
2025-02-24 00:59:39,536:INFO:Starting cross validation
2025-02-24 00:59:39,551:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 00:59:43,888:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:43,907:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:43,923:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:43,929:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:43,946:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:43,954:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:43,968:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:43,980:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,000:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,051:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,078:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,103:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,103:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,125:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,145:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,179:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,195:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,211:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,214:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,227:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,242:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,722:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,734:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,747:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,837:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,850:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,861:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,869:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,881:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,893:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:44,913:INFO:Calculating mean and std
2025-02-24 00:59:44,916:INFO:Creating metrics dataframe
2025-02-24 00:59:44,922:INFO:Uploading results into container
2025-02-24 00:59:44,924:INFO:Uploading model into container now
2025-02-24 00:59:44,924:INFO:_master_model_container: 4
2025-02-24 00:59:44,925:INFO:_display_container: 2
2025-02-24 00:59:44,926:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-02-24 00:59:44,926:INFO:create_model() successfully completed......................................
2025-02-24 00:59:45,105:INFO:SubProcess create_model() end ==================================
2025-02-24 00:59:45,105:INFO:Creating metrics dataframe
2025-02-24 00:59:45,134:INFO:Initializing SVM - Linear Kernel
2025-02-24 00:59:45,134:INFO:Total runtime is 0.7120029250780742 minutes
2025-02-24 00:59:45,146:INFO:SubProcess create_model() called ==================================
2025-02-24 00:59:45,147:INFO:Initializing create_model()
2025-02-24 00:59:45,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 00:59:45,148:INFO:Checking exceptions
2025-02-24 00:59:45,149:INFO:Importing libraries
2025-02-24 00:59:45,149:INFO:Copying training dataset
2025-02-24 00:59:45,183:INFO:Defining folds
2025-02-24 00:59:45,184:INFO:Declaring metric variables
2025-02-24 00:59:45,200:INFO:Importing untrained model
2025-02-24 00:59:45,215:INFO:SVM - Linear Kernel Imported successfully
2025-02-24 00:59:45,236:INFO:Starting cross validation
2025-02-24 00:59:45,253:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 00:59:51,452:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:51,462:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,491:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,512:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:51,533:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,596:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:51,610:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,624:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:51,648:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,651:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,668:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:51,684:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,685:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,717:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,733:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:51,742:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,759:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,779:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,785:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:51,797:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,821:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,842:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:51,990:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:51,998:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,015:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,024:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:52,032:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,122:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:52,133:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,153:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,162:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:52,171:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,336:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:52,342:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,357:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,365:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:52,373:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,413:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:52,423:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,438:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:52,445:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,448:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,463:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,464:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,480:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:52,503:INFO:Calculating mean and std
2025-02-24 00:59:52,508:INFO:Creating metrics dataframe
2025-02-24 00:59:52,516:INFO:Uploading results into container
2025-02-24 00:59:52,518:INFO:Uploading model into container now
2025-02-24 00:59:52,519:INFO:_master_model_container: 5
2025-02-24 00:59:52,520:INFO:_display_container: 2
2025-02-24 00:59:52,521:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-24 00:59:52,521:INFO:create_model() successfully completed......................................
2025-02-24 00:59:52,728:INFO:SubProcess create_model() end ==================================
2025-02-24 00:59:52,729:INFO:Creating metrics dataframe
2025-02-24 00:59:52,758:INFO:Initializing Ridge Classifier
2025-02-24 00:59:52,758:INFO:Total runtime is 0.8390624721844991 minutes
2025-02-24 00:59:52,771:INFO:SubProcess create_model() called ==================================
2025-02-24 00:59:52,773:INFO:Initializing create_model()
2025-02-24 00:59:52,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 00:59:52,774:INFO:Checking exceptions
2025-02-24 00:59:52,774:INFO:Importing libraries
2025-02-24 00:59:52,775:INFO:Copying training dataset
2025-02-24 00:59:52,797:INFO:Defining folds
2025-02-24 00:59:52,798:INFO:Declaring metric variables
2025-02-24 00:59:52,812:INFO:Importing untrained model
2025-02-24 00:59:52,829:INFO:Ridge Classifier Imported successfully
2025-02-24 00:59:52,862:INFO:Starting cross validation
2025-02-24 00:59:52,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 00:59:56,670:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:56,683:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:56,713:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:56,730:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:56,747:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:56,770:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:56,780:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:56,803:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:56,814:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:56,815:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:56,823:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:56,824:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:56,847:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:56,859:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:56,869:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,105:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:57,112:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:57,116:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,123:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,145:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,155:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,163:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:57,169:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:57,175:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,185:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,321:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:57,329:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,345:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,353:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:57,360:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,394:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:57,403:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,421:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,430:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:57,440:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,598:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:57,604:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,616:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,622:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:57,628:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,693:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:57,700:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,718:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,729:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:57,736:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,860:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 00:59:57,870:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,883:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,890:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 00:59:57,895:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 00:59:57,912:INFO:Calculating mean and std
2025-02-24 00:59:57,915:INFO:Creating metrics dataframe
2025-02-24 00:59:57,919:INFO:Uploading results into container
2025-02-24 00:59:57,921:INFO:Uploading model into container now
2025-02-24 00:59:57,921:INFO:_master_model_container: 6
2025-02-24 00:59:57,921:INFO:_display_container: 2
2025-02-24 00:59:57,922:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-02-24 00:59:57,922:INFO:create_model() successfully completed......................................
2025-02-24 00:59:58,144:INFO:SubProcess create_model() end ==================================
2025-02-24 00:59:58,145:INFO:Creating metrics dataframe
2025-02-24 00:59:58,175:INFO:Initializing Random Forest Classifier
2025-02-24 00:59:58,175:INFO:Total runtime is 0.9293498595555624 minutes
2025-02-24 00:59:58,183:INFO:SubProcess create_model() called ==================================
2025-02-24 00:59:58,184:INFO:Initializing create_model()
2025-02-24 00:59:58,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 00:59:58,184:INFO:Checking exceptions
2025-02-24 00:59:58,184:INFO:Importing libraries
2025-02-24 00:59:58,184:INFO:Copying training dataset
2025-02-24 00:59:58,204:INFO:Defining folds
2025-02-24 00:59:58,205:INFO:Declaring metric variables
2025-02-24 00:59:58,219:INFO:Importing untrained model
2025-02-24 00:59:58,234:INFO:Random Forest Classifier Imported successfully
2025-02-24 00:59:58,259:INFO:Starting cross validation
2025-02-24 00:59:58,276:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:00:05,185:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,218:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,235:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:05,247:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,248:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,248:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,277:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,293:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:05,297:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,307:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,319:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:05,335:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,496:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,520:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,536:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:05,546:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,562:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,577:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,595:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,894:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,911:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,919:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:05,927:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,959:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,976:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:05,985:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:05,994:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:06,004:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:06,023:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:06,033:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:06,042:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:06,062:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:06,079:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:06,087:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:06,094:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:06,295:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:06,311:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:06,319:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:06,327:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:06,353:INFO:Calculating mean and std
2025-02-24 01:00:06,356:INFO:Creating metrics dataframe
2025-02-24 01:00:06,362:INFO:Uploading results into container
2025-02-24 01:00:06,363:INFO:Uploading model into container now
2025-02-24 01:00:06,365:INFO:_master_model_container: 7
2025-02-24 01:00:06,365:INFO:_display_container: 2
2025-02-24 01:00:06,366:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-24 01:00:06,367:INFO:create_model() successfully completed......................................
2025-02-24 01:00:06,626:INFO:SubProcess create_model() end ==================================
2025-02-24 01:00:06,626:INFO:Creating metrics dataframe
2025-02-24 01:00:06,645:INFO:Initializing Quadratic Discriminant Analysis
2025-02-24 01:00:06,645:INFO:Total runtime is 1.0705151597658793 minutes
2025-02-24 01:00:06,654:INFO:SubProcess create_model() called ==================================
2025-02-24 01:00:06,655:INFO:Initializing create_model()
2025-02-24 01:00:06,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:00:06,655:INFO:Checking exceptions
2025-02-24 01:00:06,655:INFO:Importing libraries
2025-02-24 01:00:06,655:INFO:Copying training dataset
2025-02-24 01:00:06,682:INFO:Defining folds
2025-02-24 01:00:06,682:INFO:Declaring metric variables
2025-02-24 01:00:06,697:INFO:Importing untrained model
2025-02-24 01:00:06,713:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-24 01:00:06,750:INFO:Starting cross validation
2025-02-24 01:00:06,776:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:00:09,855:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:00:09,916:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:00:09,954:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:00:10,040:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:00:10,071:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:00:10,674:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:00:10,785:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:00:10,911:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:00:11,306:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:11,316:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,338:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,348:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:11,358:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,374:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:00:11,412:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:11,421:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,441:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,450:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:11,451:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:11,459:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,459:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,478:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,491:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:11,504:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,528:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:00:11,788:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:11,795:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,814:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,824:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:11,828:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:11,832:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,838:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,857:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:11,867:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:11,875:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,014:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:12,021:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,023:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:12,030:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,036:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,042:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:12,043:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,048:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,050:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:12,056:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,183:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:12,189:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,204:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,211:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:12,217:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,335:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:12,341:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,354:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,360:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:12,365:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,498:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:12,504:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,514:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,519:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:00:12,525:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:12,542:INFO:Calculating mean and std
2025-02-24 01:00:12,545:INFO:Creating metrics dataframe
2025-02-24 01:00:12,549:INFO:Uploading results into container
2025-02-24 01:00:12,550:INFO:Uploading model into container now
2025-02-24 01:00:12,551:INFO:_master_model_container: 8
2025-02-24 01:00:12,551:INFO:_display_container: 2
2025-02-24 01:00:12,551:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-24 01:00:12,551:INFO:create_model() successfully completed......................................
2025-02-24 01:00:12,722:INFO:SubProcess create_model() end ==================================
2025-02-24 01:00:12,722:INFO:Creating metrics dataframe
2025-02-24 01:00:12,740:INFO:Initializing Ada Boost Classifier
2025-02-24 01:00:12,740:INFO:Total runtime is 1.1721048633257547 minutes
2025-02-24 01:00:12,747:INFO:SubProcess create_model() called ==================================
2025-02-24 01:00:12,748:INFO:Initializing create_model()
2025-02-24 01:00:12,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:00:12,749:INFO:Checking exceptions
2025-02-24 01:00:12,749:INFO:Importing libraries
2025-02-24 01:00:12,749:INFO:Copying training dataset
2025-02-24 01:00:12,764:INFO:Defining folds
2025-02-24 01:00:12,764:INFO:Declaring metric variables
2025-02-24 01:00:12,772:INFO:Importing untrained model
2025-02-24 01:00:12,780:INFO:Ada Boost Classifier Imported successfully
2025-02-24 01:00:12,799:INFO:Starting cross validation
2025-02-24 01:00:12,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:00:15,732:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:00:15,795:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:00:15,922:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:00:15,944:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:00:16,369:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:00:16,439:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:00:16,506:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:00:17,170:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:00:17,818:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:00:17,904:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:00:19,723:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:19,726:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:19,732:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:19,736:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:19,755:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:19,762:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:19,778:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:19,786:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:19,941:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:19,949:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:19,968:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:19,986:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,316:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:20,328:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,354:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,385:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,404:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:20,414:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,435:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:20,436:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,446:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,457:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,468:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,488:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,509:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:20,519:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,541:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,556:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,740:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:20,749:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,768:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:20,787:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:21,305:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:21,313:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:21,328:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:21,343:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:21,386:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:21,392:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:21,405:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:21,417:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:21,440:INFO:Calculating mean and std
2025-02-24 01:00:21,444:INFO:Creating metrics dataframe
2025-02-24 01:00:21,450:INFO:Uploading results into container
2025-02-24 01:00:21,452:INFO:Uploading model into container now
2025-02-24 01:00:21,453:INFO:_master_model_container: 9
2025-02-24 01:00:21,454:INFO:_display_container: 2
2025-02-24 01:00:21,454:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-02-24 01:00:21,455:INFO:create_model() successfully completed......................................
2025-02-24 01:00:21,660:INFO:SubProcess create_model() end ==================================
2025-02-24 01:00:21,660:INFO:Creating metrics dataframe
2025-02-24 01:00:21,690:INFO:Initializing Gradient Boosting Classifier
2025-02-24 01:00:21,690:INFO:Total runtime is 1.3212722659111023 minutes
2025-02-24 01:00:21,701:INFO:SubProcess create_model() called ==================================
2025-02-24 01:00:21,702:INFO:Initializing create_model()
2025-02-24 01:00:21,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:00:21,703:INFO:Checking exceptions
2025-02-24 01:00:21,703:INFO:Importing libraries
2025-02-24 01:00:21,703:INFO:Copying training dataset
2025-02-24 01:00:21,726:INFO:Defining folds
2025-02-24 01:00:21,726:INFO:Declaring metric variables
2025-02-24 01:00:21,737:INFO:Importing untrained model
2025-02-24 01:00:21,748:INFO:Gradient Boosting Classifier Imported successfully
2025-02-24 01:00:21,770:INFO:Starting cross validation
2025-02-24 01:00:21,789:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:00:47,392:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:47,400:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:47,418:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:47,437:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:47,733:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:47,742:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:47,758:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:47,775:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:47,775:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:47,783:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:47,800:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:47,816:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:48,440:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:48,446:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:48,461:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:48,476:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:48,572:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:48,582:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:48,598:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:48,612:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:48,639:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:48,645:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:48,659:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:48,670:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:48,673:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:48,677:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:48,693:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:48,707:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:51,438:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:51,443:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:51,456:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:51,468:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:51,660:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:51,665:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:51,677:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:51,688:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:51,736:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:51,741:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:51,753:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:51,763:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:51,785:INFO:Calculating mean and std
2025-02-24 01:00:51,789:INFO:Creating metrics dataframe
2025-02-24 01:00:51,793:INFO:Uploading results into container
2025-02-24 01:00:51,794:INFO:Uploading model into container now
2025-02-24 01:00:51,795:INFO:_master_model_container: 10
2025-02-24 01:00:51,796:INFO:_display_container: 2
2025-02-24 01:00:51,796:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-24 01:00:51,796:INFO:create_model() successfully completed......................................
2025-02-24 01:00:51,968:INFO:SubProcess create_model() end ==================================
2025-02-24 01:00:51,968:INFO:Creating metrics dataframe
2025-02-24 01:00:51,991:INFO:Initializing Linear Discriminant Analysis
2025-02-24 01:00:51,991:INFO:Total runtime is 1.8262869874636332 minutes
2025-02-24 01:00:52,001:INFO:SubProcess create_model() called ==================================
2025-02-24 01:00:52,002:INFO:Initializing create_model()
2025-02-24 01:00:52,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:00:52,003:INFO:Checking exceptions
2025-02-24 01:00:52,003:INFO:Importing libraries
2025-02-24 01:00:52,003:INFO:Copying training dataset
2025-02-24 01:00:52,025:INFO:Defining folds
2025-02-24 01:00:52,026:INFO:Declaring metric variables
2025-02-24 01:00:52,037:INFO:Importing untrained model
2025-02-24 01:00:52,046:INFO:Linear Discriminant Analysis Imported successfully
2025-02-24 01:00:52,065:INFO:Starting cross validation
2025-02-24 01:00:52,085:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:00:57,339:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:57,351:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:57,375:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:57,380:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:57,386:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:57,403:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:57,410:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:57,431:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:57,857:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:57,867:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:57,887:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:57,904:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:57,975:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:57,983:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,000:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,019:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,327:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:58,335:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,351:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,367:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,523:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:58,530:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,546:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,552:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:58,559:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,562:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,569:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:58,576:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,577:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,592:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,593:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,610:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,734:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:58,734:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:00:58,740:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,740:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,753:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,753:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,766:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,766:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:00:58,791:INFO:Calculating mean and std
2025-02-24 01:00:58,795:INFO:Creating metrics dataframe
2025-02-24 01:00:58,800:INFO:Uploading results into container
2025-02-24 01:00:58,801:INFO:Uploading model into container now
2025-02-24 01:00:58,802:INFO:_master_model_container: 11
2025-02-24 01:00:58,803:INFO:_display_container: 2
2025-02-24 01:00:58,803:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-24 01:00:58,803:INFO:create_model() successfully completed......................................
2025-02-24 01:00:58,985:INFO:SubProcess create_model() end ==================================
2025-02-24 01:00:58,985:INFO:Creating metrics dataframe
2025-02-24 01:00:59,004:INFO:Initializing Extra Trees Classifier
2025-02-24 01:00:59,005:INFO:Total runtime is 1.9431761741638183 minutes
2025-02-24 01:00:59,012:INFO:SubProcess create_model() called ==================================
2025-02-24 01:00:59,012:INFO:Initializing create_model()
2025-02-24 01:00:59,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:00:59,012:INFO:Checking exceptions
2025-02-24 01:00:59,012:INFO:Importing libraries
2025-02-24 01:00:59,013:INFO:Copying training dataset
2025-02-24 01:00:59,034:INFO:Defining folds
2025-02-24 01:00:59,035:INFO:Declaring metric variables
2025-02-24 01:00:59,045:INFO:Importing untrained model
2025-02-24 01:00:59,055:INFO:Extra Trees Classifier Imported successfully
2025-02-24 01:00:59,082:INFO:Starting cross validation
2025-02-24 01:00:59,100:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:01:07,113:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:07,148:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:07,166:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:01:07,183:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:07,448:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:07,534:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:07,687:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:07,762:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:01:07,829:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:07,947:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:07,987:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:07,990:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,003:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:01:08,017:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,023:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:01:08,036:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,105:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,124:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,133:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:01:08,139:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,141:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,154:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,163:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:01:08,171:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,599:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,619:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,629:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:01:08,638:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,712:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,727:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,732:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,742:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:01:08,748:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,752:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,769:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,774:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,794:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,807:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:01:08,816:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:08,845:INFO:Calculating mean and std
2025-02-24 01:01:08,848:INFO:Creating metrics dataframe
2025-02-24 01:01:08,854:INFO:Uploading results into container
2025-02-24 01:01:08,855:INFO:Uploading model into container now
2025-02-24 01:01:08,855:INFO:_master_model_container: 12
2025-02-24 01:01:08,855:INFO:_display_container: 2
2025-02-24 01:01:08,857:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-02-24 01:01:08,857:INFO:create_model() successfully completed......................................
2025-02-24 01:01:09,062:INFO:SubProcess create_model() end ==================================
2025-02-24 01:01:09,062:INFO:Creating metrics dataframe
2025-02-24 01:01:09,094:INFO:Initializing Extreme Gradient Boosting
2025-02-24 01:01:09,094:INFO:Total runtime is 2.1113316138585407 minutes
2025-02-24 01:01:09,104:INFO:SubProcess create_model() called ==================================
2025-02-24 01:01:09,105:INFO:Initializing create_model()
2025-02-24 01:01:09,105:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:01:09,106:INFO:Checking exceptions
2025-02-24 01:01:09,106:INFO:Importing libraries
2025-02-24 01:01:09,106:INFO:Copying training dataset
2025-02-24 01:01:09,130:INFO:Defining folds
2025-02-24 01:01:09,131:INFO:Declaring metric variables
2025-02-24 01:01:09,143:INFO:Importing untrained model
2025-02-24 01:01:09,157:INFO:Extreme Gradient Boosting Imported successfully
2025-02-24 01:01:09,186:INFO:Starting cross validation
2025-02-24 01:01:09,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:01:17,098:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:17,121:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:17,145:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:17,169:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:17,192:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:17,214:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:17,378:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:17,399:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:17,421:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:17,739:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:17,767:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:17,793:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,090:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,108:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,125:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,168:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,184:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,201:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,540:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,553:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,556:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,568:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,571:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,583:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,750:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,764:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,777:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,785:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,799:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,813:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:01:18,842:INFO:Calculating mean and std
2025-02-24 01:01:18,845:INFO:Creating metrics dataframe
2025-02-24 01:01:18,849:INFO:Uploading results into container
2025-02-24 01:01:18,850:INFO:Uploading model into container now
2025-02-24 01:01:18,851:INFO:_master_model_container: 13
2025-02-24 01:01:18,852:INFO:_display_container: 2
2025-02-24 01:01:18,855:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-02-24 01:01:18,855:INFO:create_model() successfully completed......................................
2025-02-24 01:01:19,069:INFO:SubProcess create_model() end ==================================
2025-02-24 01:01:19,069:INFO:Creating metrics dataframe
2025-02-24 01:01:19,098:INFO:Initializing Light Gradient Boosting Machine
2025-02-24 01:01:19,098:INFO:Total runtime is 2.2780720750490824 minutes
2025-02-24 01:01:19,111:INFO:SubProcess create_model() called ==================================
2025-02-24 01:01:19,112:INFO:Initializing create_model()
2025-02-24 01:01:19,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:01:19,113:INFO:Checking exceptions
2025-02-24 01:01:19,113:INFO:Importing libraries
2025-02-24 01:01:19,114:INFO:Copying training dataset
2025-02-24 01:01:19,140:INFO:Defining folds
2025-02-24 01:01:19,141:INFO:Declaring metric variables
2025-02-24 01:01:19,151:INFO:Importing untrained model
2025-02-24 01:01:19,164:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-24 01:01:19,180:INFO:Starting cross validation
2025-02-24 01:01:19,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:01:24,198:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2025-02-24 01:01:24,217:WARNING:Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1560, in fit
    super().fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1049, in fit
    self._Booster = train(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/engine.py", line 297, in train
    booster = Booster(params=params, train_set=train_set)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3656, in __init__
    train_set.construct()
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2590, in construct
    self._lazy_init(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2227, in _lazy_init
    return self.set_feature_name(feature_name)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3046, in set_feature_name
    _safe_call(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 313, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode("utf-8"))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2025-02-24 01:01:24,218:INFO:Initializing create_model()
2025-02-24 01:01:24,218:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:01:24,218:INFO:Checking exceptions
2025-02-24 01:01:24,218:INFO:Importing libraries
2025-02-24 01:01:24,219:INFO:Copying training dataset
2025-02-24 01:01:24,246:INFO:Defining folds
2025-02-24 01:01:24,246:INFO:Declaring metric variables
2025-02-24 01:01:24,262:INFO:Importing untrained model
2025-02-24 01:01:24,279:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-24 01:01:24,308:INFO:Starting cross validation
2025-02-24 01:01:24,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:01:28,805:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2025-02-24 01:01:28,807:ERROR:Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1560, in fit
    super().fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1049, in fit
    self._Booster = train(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/engine.py", line 297, in train
    booster = Booster(params=params, train_set=train_set)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3656, in __init__
    train_set.construct()
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2590, in construct
    self._lazy_init(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2227, in _lazy_init
    return self.set_feature_name(feature_name)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3046, in set_feature_name
    _safe_call(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 313, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode("utf-8"))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1560, in fit
    super().fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1049, in fit
    self._Booster = train(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/engine.py", line 297, in train
    booster = Booster(params=params, train_set=train_set)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3656, in __init__
    train_set.construct()
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2590, in construct
    self._lazy_init(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2227, in _lazy_init
    return self.set_feature_name(feature_name)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3046, in set_feature_name
    _safe_call(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 313, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode("utf-8"))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2025-02-24 01:01:28,808:INFO:Initializing CatBoost Classifier
2025-02-24 01:01:28,809:INFO:Total runtime is 2.4399080713589987 minutes
2025-02-24 01:01:28,819:INFO:SubProcess create_model() called ==================================
2025-02-24 01:01:28,819:INFO:Initializing create_model()
2025-02-24 01:01:28,820:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:01:28,820:INFO:Checking exceptions
2025-02-24 01:01:28,820:INFO:Importing libraries
2025-02-24 01:01:28,820:INFO:Copying training dataset
2025-02-24 01:01:28,841:INFO:Defining folds
2025-02-24 01:01:28,841:INFO:Declaring metric variables
2025-02-24 01:01:28,851:INFO:Importing untrained model
2025-02-24 01:01:28,859:INFO:CatBoost Classifier Imported successfully
2025-02-24 01:01:28,878:INFO:Starting cross validation
2025-02-24 01:01:28,894:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:02:26,580:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:26,605:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:26,627:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,100:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,128:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,155:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,634:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,660:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,667:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,687:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,688:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,708:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,797:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,816:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,836:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,891:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,907:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,924:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,937:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,950:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,952:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,964:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,966:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:27,979:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:28,102:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:28,122:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:28,133:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:02:28,143:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:28,212:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:28,228:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:28,241:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:28,274:INFO:Calculating mean and std
2025-02-24 01:02:28,278:INFO:Creating metrics dataframe
2025-02-24 01:02:28,285:INFO:Uploading results into container
2025-02-24 01:02:28,287:INFO:Uploading model into container now
2025-02-24 01:02:28,290:INFO:_master_model_container: 14
2025-02-24 01:02:28,290:INFO:_display_container: 2
2025-02-24 01:02:28,290:INFO:<catboost.core.CatBoostClassifier object at 0x7f64f95a6370>
2025-02-24 01:02:28,290:INFO:create_model() successfully completed......................................
2025-02-24 01:02:28,549:INFO:SubProcess create_model() end ==================================
2025-02-24 01:02:28,549:INFO:Creating metrics dataframe
2025-02-24 01:02:28,585:INFO:Initializing Dummy Classifier
2025-02-24 01:02:28,586:INFO:Total runtime is 3.436199732621511 minutes
2025-02-24 01:02:28,598:INFO:SubProcess create_model() called ==================================
2025-02-24 01:02:28,599:INFO:Initializing create_model()
2025-02-24 01:02:28,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f64f96f1fa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:02:28,600:INFO:Checking exceptions
2025-02-24 01:02:28,600:INFO:Importing libraries
2025-02-24 01:02:28,600:INFO:Copying training dataset
2025-02-24 01:02:28,633:INFO:Defining folds
2025-02-24 01:02:28,634:INFO:Declaring metric variables
2025-02-24 01:02:28,653:INFO:Importing untrained model
2025-02-24 01:02:28,668:INFO:Dummy Classifier Imported successfully
2025-02-24 01:02:28,700:INFO:Starting cross validation
2025-02-24 01:02:28,725:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:02:32,754:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:32,809:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:32,834:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:02:32,859:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:32,919:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:32,955:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:32,955:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:32,955:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:32,972:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:02:32,986:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:32,988:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:32,989:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,001:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:02:33,014:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:02:33,015:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,035:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,465:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,494:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,510:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:02:33,524:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,642:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,659:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,669:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:02:33,678:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,765:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,771:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,782:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,788:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,791:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:02:33,796:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:02:33,799:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,804:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,972:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:33,990:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:34,001:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:02:34,010:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:34,052:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:34,074:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:34,086:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:02:34,099:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:02:34,144:INFO:Calculating mean and std
2025-02-24 01:02:34,149:INFO:Creating metrics dataframe
2025-02-24 01:02:34,158:INFO:Uploading results into container
2025-02-24 01:02:34,160:INFO:Uploading model into container now
2025-02-24 01:02:34,164:INFO:_master_model_container: 15
2025-02-24 01:02:34,164:INFO:_display_container: 2
2025-02-24 01:02:34,165:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-02-24 01:02:34,165:INFO:create_model() successfully completed......................................
2025-02-24 01:02:34,434:INFO:SubProcess create_model() end ==================================
2025-02-24 01:02:34,434:INFO:Creating metrics dataframe
2025-02-24 01:02:34,476:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-24 01:02:34,503:INFO:Initializing create_model()
2025-02-24 01:02:34,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f64f96f1dc0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:02:34,504:INFO:Checking exceptions
2025-02-24 01:02:34,508:INFO:Importing libraries
2025-02-24 01:02:34,509:INFO:Copying training dataset
2025-02-24 01:02:34,530:INFO:Defining folds
2025-02-24 01:02:34,530:INFO:Declaring metric variables
2025-02-24 01:02:34,531:INFO:Importing untrained model
2025-02-24 01:02:34,531:INFO:Declaring custom model
2025-02-24 01:02:34,533:INFO:Extreme Gradient Boosting Imported successfully
2025-02-24 01:02:34,547:INFO:Cross validation set to False
2025-02-24 01:02:34,547:INFO:Fitting Model
2025-02-24 01:07:48,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 01:07:48,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 01:07:48,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 01:07:48,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 01:07:49,488:INFO:PyCaret ClassificationExperiment
2025-02-24 01:07:49,488:INFO:Logging name: clf-default-name
2025-02-24 01:07:49,488:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-24 01:07:49,488:INFO:version 3.3.2
2025-02-24 01:07:49,488:INFO:Initializing setup()
2025-02-24 01:07:49,488:INFO:self.USI: 9140
2025-02-24 01:07:49,489:INFO:self._variable_keys: {'_available_plots', 'idx', 'X_train', 'USI', 'exp_id', 'gpu_param', 'fold_groups_param', 'memory', 'exp_name_log', 'X', 'is_multiclass', 'n_jobs_param', 'target_param', 'logging_param', '_ml_usecase', 'fix_imbalance', 'X_test', 'gpu_n_jobs_param', 'html_param', 'y_train', 'y', 'y_test', 'fold_generator', 'fold_shuffle_param', 'seed', 'log_plots_param', 'pipeline', 'data'}
2025-02-24 01:07:49,489:INFO:Checking environment
2025-02-24 01:07:49,489:INFO:python_version: 3.9.21
2025-02-24 01:07:49,489:INFO:python_build: ('main', 'Dec 11 2024 16:24:11')
2025-02-24 01:07:49,489:INFO:machine: x86_64
2025-02-24 01:07:49,489:INFO:platform: Linux-6.12.15-200.fc41.x86_64-x86_64-with-glibc2.40
2025-02-24 01:07:49,489:INFO:Memory: svmem(total=16464158720, available=7599058944, percent=53.8, used=6285574144, free=5459476480, active=3999092736, inactive=3597148160, buffers=327680, cached=4718780416, shared=2029191168, slab=677257216)
2025-02-24 01:07:49,491:INFO:Physical Core: 14
2025-02-24 01:07:49,492:INFO:Logical Core: 20
2025-02-24 01:07:49,492:INFO:Checking libraries
2025-02-24 01:07:49,492:INFO:System:
2025-02-24 01:07:49,492:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:24:11)  [GCC 11.2.0]
2025-02-24 01:07:49,492:INFO:executable: /home/ahmadnafim/anaconda3/envs/bcc_intern/bin/python
2025-02-24 01:07:49,492:INFO:   machine: Linux-6.12.15-200.fc41.x86_64-x86_64-with-glibc2.40
2025-02-24 01:07:49,492:INFO:PyCaret required dependencies:
2025-02-24 01:07:49,569:INFO:                 pip: 25.0
2025-02-24 01:07:49,569:INFO:          setuptools: 75.8.0
2025-02-24 01:07:49,570:INFO:             pycaret: 3.3.2
2025-02-24 01:07:49,570:INFO:             IPython: 8.18.1
2025-02-24 01:07:49,570:INFO:          ipywidgets: 8.1.5
2025-02-24 01:07:49,570:INFO:                tqdm: 4.67.1
2025-02-24 01:07:49,570:INFO:               numpy: 1.26.4
2025-02-24 01:07:49,570:INFO:              pandas: 2.1.4
2025-02-24 01:07:49,570:INFO:              jinja2: 3.1.5
2025-02-24 01:07:49,570:INFO:               scipy: 1.11.4
2025-02-24 01:07:49,570:INFO:              joblib: 1.3.2
2025-02-24 01:07:49,570:INFO:             sklearn: 1.4.2
2025-02-24 01:07:49,570:INFO:                pyod: 2.0.3
2025-02-24 01:07:49,570:INFO:            imblearn: 0.12.4
2025-02-24 01:07:49,570:INFO:   category_encoders: 2.6.4
2025-02-24 01:07:49,570:INFO:            lightgbm: 4.6.0
2025-02-24 01:07:49,570:INFO:               numba: 0.60.0
2025-02-24 01:07:49,570:INFO:            requests: 2.32.3
2025-02-24 01:07:49,570:INFO:          matplotlib: 3.7.5
2025-02-24 01:07:49,570:INFO:          scikitplot: 0.3.7
2025-02-24 01:07:49,570:INFO:         yellowbrick: 1.5
2025-02-24 01:07:49,570:INFO:              plotly: 5.24.1
2025-02-24 01:07:49,570:INFO:    plotly-resampler: Not installed
2025-02-24 01:07:49,571:INFO:             kaleido: 0.2.1
2025-02-24 01:07:49,571:INFO:           schemdraw: 0.15
2025-02-24 01:07:49,571:INFO:         statsmodels: 0.14.4
2025-02-24 01:07:49,571:INFO:              sktime: 0.26.0
2025-02-24 01:07:49,571:INFO:               tbats: 1.1.3
2025-02-24 01:07:49,571:INFO:            pmdarima: 2.0.4
2025-02-24 01:07:49,571:INFO:              psutil: 6.1.1
2025-02-24 01:07:49,571:INFO:          markupsafe: 3.0.2
2025-02-24 01:07:49,571:INFO:             pickle5: Not installed
2025-02-24 01:07:49,571:INFO:         cloudpickle: 3.1.1
2025-02-24 01:07:49,571:INFO:         deprecation: 2.1.0
2025-02-24 01:07:49,571:INFO:              xxhash: 3.5.0
2025-02-24 01:07:49,571:INFO:           wurlitzer: 3.1.1
2025-02-24 01:07:49,571:INFO:PyCaret optional dependencies:
2025-02-24 01:07:49,660:INFO:                shap: Not installed
2025-02-24 01:07:49,660:INFO:           interpret: Not installed
2025-02-24 01:07:49,660:INFO:                umap: Not installed
2025-02-24 01:07:49,660:INFO:     ydata_profiling: Not installed
2025-02-24 01:07:49,661:INFO:  explainerdashboard: Not installed
2025-02-24 01:07:49,661:INFO:             autoviz: Not installed
2025-02-24 01:07:49,661:INFO:           fairlearn: Not installed
2025-02-24 01:07:49,661:INFO:          deepchecks: Not installed
2025-02-24 01:07:49,661:INFO:             xgboost: 2.1.4
2025-02-24 01:07:49,661:INFO:            catboost: 1.2.7
2025-02-24 01:07:49,661:INFO:              kmodes: Not installed
2025-02-24 01:07:49,661:INFO:             mlxtend: Not installed
2025-02-24 01:07:49,661:INFO:       statsforecast: Not installed
2025-02-24 01:07:49,661:INFO:        tune_sklearn: Not installed
2025-02-24 01:07:49,661:INFO:                 ray: Not installed
2025-02-24 01:07:49,661:INFO:            hyperopt: Not installed
2025-02-24 01:07:49,661:INFO:              optuna: Not installed
2025-02-24 01:07:49,661:INFO:               skopt: Not installed
2025-02-24 01:07:49,661:INFO:              mlflow: Not installed
2025-02-24 01:07:49,661:INFO:              gradio: Not installed
2025-02-24 01:07:49,661:INFO:             fastapi: Not installed
2025-02-24 01:07:49,661:INFO:             uvicorn: Not installed
2025-02-24 01:07:49,661:INFO:              m2cgen: Not installed
2025-02-24 01:07:49,661:INFO:           evidently: Not installed
2025-02-24 01:07:49,661:INFO:               fugue: Not installed
2025-02-24 01:07:49,661:INFO:           streamlit: Not installed
2025-02-24 01:07:49,661:INFO:             prophet: Not installed
2025-02-24 01:07:49,661:INFO:None
2025-02-24 01:07:49,662:INFO:Set up data.
2025-02-24 01:07:49,765:INFO:Set up folding strategy.
2025-02-24 01:07:49,766:INFO:Set up train/test split.
2025-02-24 01:07:49,962:INFO:Set up index.
2025-02-24 01:07:49,963:INFO:Assigning column types.
2025-02-24 01:07:49,975:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-24 01:07:50,073:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-24 01:07:50,078:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 01:07:50,148:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:07:50,153:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:07:50,269:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-24 01:07:50,271:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 01:07:50,328:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:07:50,334:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:07:50,335:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-24 01:07:50,461:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 01:07:50,528:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:07:50,533:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:07:50,632:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 01:07:50,713:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:07:50,720:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:07:50,722:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-24 01:07:50,899:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:07:50,905:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:07:51,102:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:07:51,108:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:07:51,111:INFO:Preparing preprocessing pipeline...
2025-02-24 01:07:51,115:INFO:Set up label encoding.
2025-02-24 01:07:51,115:INFO:Set up simple imputation.
2025-02-24 01:07:51,132:INFO:Set up encoding of ordinal features.
2025-02-24 01:07:51,140:INFO:Set up encoding of categorical features.
2025-02-24 01:07:53,949:INFO:Finished creating preprocessing pipeline.
2025-02-24 01:07:54,002:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              kee...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-02-24 01:07:54,002:INFO:Creating final display dataframe.
2025-02-24 01:07:56,283:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                 123  
1                                   Accident_severity  
2                                          Multiclass  
3   Fatal injury: 0, Serious Injury: 1, Slight Inj...  
4                                         (12316, 32)  
5                                        (12316, 142)  
6                                         (8621, 142)  
7                                         (3695, 142)  
8                                                   2  
9                                                  29  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               9140  
2025-02-24 01:07:56,477:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:07:56,484:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:07:56,638:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:07:56,644:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:07:56,648:INFO:setup() successfully completed in 7.16s...............
2025-02-24 01:07:56,648:INFO:Initializing compare_models()
2025-02-24 01:07:56,648:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-02-24 01:07:56,648:INFO:Checking exceptions
2025-02-24 01:07:56,664:INFO:Preparing display monitor
2025-02-24 01:07:56,740:INFO:Initializing Logistic Regression
2025-02-24 01:07:56,741:INFO:Total runtime is 1.2481212615966797e-05 minutes
2025-02-24 01:07:56,753:INFO:SubProcess create_model() called ==================================
2025-02-24 01:07:56,754:INFO:Initializing create_model()
2025-02-24 01:07:56,755:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:07:56,755:INFO:Checking exceptions
2025-02-24 01:07:56,755:INFO:Importing libraries
2025-02-24 01:07:56,755:INFO:Copying training dataset
2025-02-24 01:07:56,782:INFO:Defining folds
2025-02-24 01:07:56,782:INFO:Declaring metric variables
2025-02-24 01:07:56,793:INFO:Importing untrained model
2025-02-24 01:07:56,806:INFO:Logistic Regression Imported successfully
2025-02-24 01:07:56,831:INFO:Starting cross validation
2025-02-24 01:07:56,858:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:08:10,636:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:10,662:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:10,690:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:10,705:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:10,708:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:10,717:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:10,737:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:10,760:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:10,816:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:10,826:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:10,847:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:10,868:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:11,213:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:11,224:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:11,243:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:11,260:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:11,552:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:11,561:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:11,577:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:11,585:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:11,593:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:13,049:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:13,058:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:13,072:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:13,081:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:13,089:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:13,166:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:13,177:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:13,193:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:13,201:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:13,209:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:13,350:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:13,361:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:13,378:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:13,393:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:13,672:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:13,679:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:13,693:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:13,705:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:14,263:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:14,270:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:14,282:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:14,291:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:14,299:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:14,329:INFO:Calculating mean and std
2025-02-24 01:08:14,334:INFO:Creating metrics dataframe
2025-02-24 01:08:14,344:INFO:Uploading results into container
2025-02-24 01:08:14,347:INFO:Uploading model into container now
2025-02-24 01:08:14,349:INFO:_master_model_container: 1
2025-02-24 01:08:14,349:INFO:_display_container: 2
2025-02-24 01:08:14,350:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-24 01:08:14,350:INFO:create_model() successfully completed......................................
2025-02-24 01:08:14,576:INFO:SubProcess create_model() end ==================================
2025-02-24 01:08:14,576:INFO:Creating metrics dataframe
2025-02-24 01:08:14,598:INFO:Initializing K Neighbors Classifier
2025-02-24 01:08:14,598:INFO:Total runtime is 0.29763433535893763 minutes
2025-02-24 01:08:14,609:INFO:SubProcess create_model() called ==================================
2025-02-24 01:08:14,610:INFO:Initializing create_model()
2025-02-24 01:08:14,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:08:14,611:INFO:Checking exceptions
2025-02-24 01:08:14,611:INFO:Importing libraries
2025-02-24 01:08:14,611:INFO:Copying training dataset
2025-02-24 01:08:14,633:INFO:Defining folds
2025-02-24 01:08:14,633:INFO:Declaring metric variables
2025-02-24 01:08:14,644:INFO:Importing untrained model
2025-02-24 01:08:14,654:INFO:K Neighbors Classifier Imported successfully
2025-02-24 01:08:14,672:INFO:Starting cross validation
2025-02-24 01:08:14,684:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:08:21,589:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:21,606:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:21,623:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:21,755:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:21,773:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:21,790:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:21,964:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:21,984:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:21,994:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:22,002:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,059:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,083:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,103:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,123:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,141:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,158:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,648:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,660:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,671:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,673:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,683:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,695:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,731:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,749:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:22,756:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:22,762:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:23,270:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:23,288:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:23,298:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:23,306:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:23,386:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:23,401:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:23,415:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:23,445:INFO:Calculating mean and std
2025-02-24 01:08:23,449:INFO:Creating metrics dataframe
2025-02-24 01:08:23,455:INFO:Uploading results into container
2025-02-24 01:08:23,456:INFO:Uploading model into container now
2025-02-24 01:08:23,457:INFO:_master_model_container: 2
2025-02-24 01:08:23,457:INFO:_display_container: 2
2025-02-24 01:08:23,458:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-24 01:08:23,458:INFO:create_model() successfully completed......................................
2025-02-24 01:08:23,597:INFO:SubProcess create_model() end ==================================
2025-02-24 01:08:23,598:INFO:Creating metrics dataframe
2025-02-24 01:08:23,616:INFO:Initializing Naive Bayes
2025-02-24 01:08:23,617:INFO:Total runtime is 0.44794188737869267 minutes
2025-02-24 01:08:23,628:INFO:SubProcess create_model() called ==================================
2025-02-24 01:08:23,629:INFO:Initializing create_model()
2025-02-24 01:08:23,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:08:23,630:INFO:Checking exceptions
2025-02-24 01:08:23,630:INFO:Importing libraries
2025-02-24 01:08:23,630:INFO:Copying training dataset
2025-02-24 01:08:23,659:INFO:Defining folds
2025-02-24 01:08:23,659:INFO:Declaring metric variables
2025-02-24 01:08:23,672:INFO:Importing untrained model
2025-02-24 01:08:23,688:INFO:Naive Bayes Imported successfully
2025-02-24 01:08:23,708:INFO:Starting cross validation
2025-02-24 01:08:23,730:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:08:26,579:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:26,593:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:26,599:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:26,608:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:26,610:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:26,616:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:26,628:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:26,631:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:26,651:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:26,782:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:26,807:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:26,831:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,015:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,034:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,055:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,114:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,137:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,158:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,185:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,199:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,215:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,400:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,414:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,435:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,518:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,529:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,530:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,543:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,543:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,555:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:27,581:INFO:Calculating mean and std
2025-02-24 01:08:27,583:INFO:Creating metrics dataframe
2025-02-24 01:08:27,588:INFO:Uploading results into container
2025-02-24 01:08:27,589:INFO:Uploading model into container now
2025-02-24 01:08:27,590:INFO:_master_model_container: 3
2025-02-24 01:08:27,590:INFO:_display_container: 2
2025-02-24 01:08:27,591:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-24 01:08:27,591:INFO:create_model() successfully completed......................................
2025-02-24 01:08:27,746:INFO:SubProcess create_model() end ==================================
2025-02-24 01:08:27,746:INFO:Creating metrics dataframe
2025-02-24 01:08:27,766:INFO:Initializing Decision Tree Classifier
2025-02-24 01:08:27,766:INFO:Total runtime is 0.5170968214670817 minutes
2025-02-24 01:08:27,777:INFO:SubProcess create_model() called ==================================
2025-02-24 01:08:27,777:INFO:Initializing create_model()
2025-02-24 01:08:27,777:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:08:27,777:INFO:Checking exceptions
2025-02-24 01:08:27,778:INFO:Importing libraries
2025-02-24 01:08:27,778:INFO:Copying training dataset
2025-02-24 01:08:27,798:INFO:Defining folds
2025-02-24 01:08:27,798:INFO:Declaring metric variables
2025-02-24 01:08:27,808:INFO:Importing untrained model
2025-02-24 01:08:27,818:INFO:Decision Tree Classifier Imported successfully
2025-02-24 01:08:27,837:INFO:Starting cross validation
2025-02-24 01:08:27,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:08:31,369:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,393:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,417:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,587:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,605:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,625:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,666:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,698:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,698:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,715:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,725:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,731:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,740:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,757:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:31,775:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,082:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,097:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,101:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,111:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,115:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,128:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,146:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,158:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,171:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,257:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,268:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,280:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,316:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,329:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,341:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:32,363:INFO:Calculating mean and std
2025-02-24 01:08:32,367:INFO:Creating metrics dataframe
2025-02-24 01:08:32,371:INFO:Uploading results into container
2025-02-24 01:08:32,372:INFO:Uploading model into container now
2025-02-24 01:08:32,373:INFO:_master_model_container: 4
2025-02-24 01:08:32,373:INFO:_display_container: 2
2025-02-24 01:08:32,374:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-02-24 01:08:32,374:INFO:create_model() successfully completed......................................
2025-02-24 01:08:32,523:INFO:SubProcess create_model() end ==================================
2025-02-24 01:08:32,524:INFO:Creating metrics dataframe
2025-02-24 01:08:32,545:INFO:Initializing SVM - Linear Kernel
2025-02-24 01:08:32,546:INFO:Total runtime is 0.5967558940251668 minutes
2025-02-24 01:08:32,554:INFO:SubProcess create_model() called ==================================
2025-02-24 01:08:32,555:INFO:Initializing create_model()
2025-02-24 01:08:32,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:08:32,555:INFO:Checking exceptions
2025-02-24 01:08:32,555:INFO:Importing libraries
2025-02-24 01:08:32,555:INFO:Copying training dataset
2025-02-24 01:08:32,578:INFO:Defining folds
2025-02-24 01:08:32,579:INFO:Declaring metric variables
2025-02-24 01:08:32,591:INFO:Importing untrained model
2025-02-24 01:08:32,604:INFO:SVM - Linear Kernel Imported successfully
2025-02-24 01:08:32,625:INFO:Starting cross validation
2025-02-24 01:08:32,639:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:08:37,527:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:37,540:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:37,569:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:37,585:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:37,598:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:37,642:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:37,652:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:37,673:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:37,695:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:37,819:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:37,828:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:37,847:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:37,865:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:37,875:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:37,885:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:37,904:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:37,920:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:37,980:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:37,988:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,004:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,012:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:38,020:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,053:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:38,059:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,073:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,080:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:38,085:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,161:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:38,167:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,180:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,186:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:38,194:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,236:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:38,242:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,257:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,271:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,281:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:38,283:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:38,287:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,289:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,299:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,302:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,306:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:38,312:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,314:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:38,336:INFO:Calculating mean and std
2025-02-24 01:08:38,339:INFO:Creating metrics dataframe
2025-02-24 01:08:38,343:INFO:Uploading results into container
2025-02-24 01:08:38,345:INFO:Uploading model into container now
2025-02-24 01:08:38,346:INFO:_master_model_container: 5
2025-02-24 01:08:38,346:INFO:_display_container: 2
2025-02-24 01:08:38,347:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-24 01:08:38,347:INFO:create_model() successfully completed......................................
2025-02-24 01:08:38,492:INFO:SubProcess create_model() end ==================================
2025-02-24 01:08:38,492:INFO:Creating metrics dataframe
2025-02-24 01:08:38,508:INFO:Initializing Ridge Classifier
2025-02-24 01:08:38,508:INFO:Total runtime is 0.696126389503479 minutes
2025-02-24 01:08:38,517:INFO:SubProcess create_model() called ==================================
2025-02-24 01:08:38,517:INFO:Initializing create_model()
2025-02-24 01:08:38,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:08:38,517:INFO:Checking exceptions
2025-02-24 01:08:38,518:INFO:Importing libraries
2025-02-24 01:08:38,518:INFO:Copying training dataset
2025-02-24 01:08:38,536:INFO:Defining folds
2025-02-24 01:08:38,536:INFO:Declaring metric variables
2025-02-24 01:08:38,544:INFO:Importing untrained model
2025-02-24 01:08:38,554:INFO:Ridge Classifier Imported successfully
2025-02-24 01:08:38,572:INFO:Starting cross validation
2025-02-24 01:08:38,585:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:08:41,319:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:41,323:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:41,326:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,331:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,343:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,343:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:41,349:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,351:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,351:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:41,357:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:41,358:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,365:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,367:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,376:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:41,384:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,455:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:41,464:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,480:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,488:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:41,497:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,561:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:41,573:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,592:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,605:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:41,620:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,735:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:41,744:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,759:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,767:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:41,775:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,918:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:41,928:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,948:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:41,956:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:41,962:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:42,136:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:42,142:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:42,154:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:42,161:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:42,167:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:42,171:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:42,177:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:42,189:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:42,192:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:42,195:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:42,197:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:42,201:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:42,210:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:42,215:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:42,221:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:42,243:INFO:Calculating mean and std
2025-02-24 01:08:42,246:INFO:Creating metrics dataframe
2025-02-24 01:08:42,251:INFO:Uploading results into container
2025-02-24 01:08:42,252:INFO:Uploading model into container now
2025-02-24 01:08:42,252:INFO:_master_model_container: 6
2025-02-24 01:08:42,253:INFO:_display_container: 2
2025-02-24 01:08:42,253:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-02-24 01:08:42,253:INFO:create_model() successfully completed......................................
2025-02-24 01:08:42,374:INFO:SubProcess create_model() end ==================================
2025-02-24 01:08:42,374:INFO:Creating metrics dataframe
2025-02-24 01:08:42,388:INFO:Initializing Random Forest Classifier
2025-02-24 01:08:42,388:INFO:Total runtime is 0.7607903440793355 minutes
2025-02-24 01:08:42,396:INFO:SubProcess create_model() called ==================================
2025-02-24 01:08:42,397:INFO:Initializing create_model()
2025-02-24 01:08:42,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:08:42,397:INFO:Checking exceptions
2025-02-24 01:08:42,397:INFO:Importing libraries
2025-02-24 01:08:42,397:INFO:Copying training dataset
2025-02-24 01:08:42,416:INFO:Defining folds
2025-02-24 01:08:42,416:INFO:Declaring metric variables
2025-02-24 01:08:42,423:INFO:Importing untrained model
2025-02-24 01:08:42,432:INFO:Random Forest Classifier Imported successfully
2025-02-24 01:08:42,453:INFO:Starting cross validation
2025-02-24 01:08:42,465:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:08:48,050:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,090:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,115:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,183:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,213:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,227:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:48,238:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,263:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,286:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,296:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:48,306:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,337:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,364:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,368:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,377:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:48,385:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,388:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,393:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:48,400:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,402:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,419:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,426:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:48,433:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,588:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,600:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,600:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,607:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:48,612:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,613:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,618:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:48,624:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,768:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,780:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,787:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:48,794:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,852:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,863:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,869:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:48,878:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:48,906:INFO:Calculating mean and std
2025-02-24 01:08:48,909:INFO:Creating metrics dataframe
2025-02-24 01:08:48,914:INFO:Uploading results into container
2025-02-24 01:08:48,915:INFO:Uploading model into container now
2025-02-24 01:08:48,915:INFO:_master_model_container: 7
2025-02-24 01:08:48,916:INFO:_display_container: 2
2025-02-24 01:08:48,916:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-24 01:08:48,917:INFO:create_model() successfully completed......................................
2025-02-24 01:08:49,077:INFO:SubProcess create_model() end ==================================
2025-02-24 01:08:49,078:INFO:Creating metrics dataframe
2025-02-24 01:08:49,099:INFO:Initializing Quadratic Discriminant Analysis
2025-02-24 01:08:49,100:INFO:Total runtime is 0.8726552764574687 minutes
2025-02-24 01:08:49,111:INFO:SubProcess create_model() called ==================================
2025-02-24 01:08:49,112:INFO:Initializing create_model()
2025-02-24 01:08:49,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:08:49,112:INFO:Checking exceptions
2025-02-24 01:08:49,112:INFO:Importing libraries
2025-02-24 01:08:49,113:INFO:Copying training dataset
2025-02-24 01:08:49,133:INFO:Defining folds
2025-02-24 01:08:49,134:INFO:Declaring metric variables
2025-02-24 01:08:49,142:INFO:Importing untrained model
2025-02-24 01:08:49,154:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-24 01:08:49,177:INFO:Starting cross validation
2025-02-24 01:08:49,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:08:51,538:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:08:51,583:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:08:51,645:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:08:51,914:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:08:52,200:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:08:52,322:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:08:52,364:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:08:52,519:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:08:52,540:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:08:52,608:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:52,611:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:52,617:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:52,619:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:52,635:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:52,637:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:52,643:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:52,647:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:52,652:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:52,656:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:52,850:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:52,859:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:52,876:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:08:52,876:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:52,893:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,062:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:53,070:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,088:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,097:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:53,106:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,126:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:53,133:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,151:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,159:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:53,167:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,228:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:53,235:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,249:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,262:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,279:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:53,286:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,298:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,298:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:53,304:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,305:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:53,312:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,316:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,328:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,375:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:53,382:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,397:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,403:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:53,408:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,528:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:53,534:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,545:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,551:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:08:53,555:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:53,579:INFO:Calculating mean and std
2025-02-24 01:08:53,581:INFO:Creating metrics dataframe
2025-02-24 01:08:53,585:INFO:Uploading results into container
2025-02-24 01:08:53,586:INFO:Uploading model into container now
2025-02-24 01:08:53,587:INFO:_master_model_container: 8
2025-02-24 01:08:53,587:INFO:_display_container: 2
2025-02-24 01:08:53,587:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-24 01:08:53,587:INFO:create_model() successfully completed......................................
2025-02-24 01:08:53,730:INFO:SubProcess create_model() end ==================================
2025-02-24 01:08:53,731:INFO:Creating metrics dataframe
2025-02-24 01:08:53,759:INFO:Initializing Ada Boost Classifier
2025-02-24 01:08:53,760:INFO:Total runtime is 0.9503210624059041 minutes
2025-02-24 01:08:53,766:INFO:SubProcess create_model() called ==================================
2025-02-24 01:08:53,767:INFO:Initializing create_model()
2025-02-24 01:08:53,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:08:53,767:INFO:Checking exceptions
2025-02-24 01:08:53,767:INFO:Importing libraries
2025-02-24 01:08:53,767:INFO:Copying training dataset
2025-02-24 01:08:53,794:INFO:Defining folds
2025-02-24 01:08:53,794:INFO:Declaring metric variables
2025-02-24 01:08:53,806:INFO:Importing untrained model
2025-02-24 01:08:53,821:INFO:Ada Boost Classifier Imported successfully
2025-02-24 01:08:53,843:INFO:Starting cross validation
2025-02-24 01:08:53,858:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:08:55,893:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:08:55,932:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:08:55,941:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:08:56,284:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:08:56,565:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:08:56,596:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:08:56,707:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:08:56,764:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:08:57,480:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:08:57,507:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:08:58,438:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:58,448:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,468:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,472:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:58,482:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,487:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,490:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:58,499:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,500:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,519:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,520:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,536:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,710:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:58,719:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,736:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,752:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,958:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:58,965:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:58,986:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,004:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,030:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:59,038:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,057:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,072:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,227:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:59,233:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,247:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,259:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,399:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:59,406:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,421:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,438:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,670:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:59,679:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,693:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,698:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:08:59,706:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,711:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,721:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,738:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:08:59,764:INFO:Calculating mean and std
2025-02-24 01:08:59,766:INFO:Creating metrics dataframe
2025-02-24 01:08:59,772:INFO:Uploading results into container
2025-02-24 01:08:59,773:INFO:Uploading model into container now
2025-02-24 01:08:59,775:INFO:_master_model_container: 9
2025-02-24 01:08:59,776:INFO:_display_container: 2
2025-02-24 01:08:59,776:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-02-24 01:08:59,777:INFO:create_model() successfully completed......................................
2025-02-24 01:08:59,927:INFO:SubProcess create_model() end ==================================
2025-02-24 01:08:59,928:INFO:Creating metrics dataframe
2025-02-24 01:08:59,953:INFO:Initializing Gradient Boosting Classifier
2025-02-24 01:08:59,954:INFO:Total runtime is 1.0535538474718729 minutes
2025-02-24 01:08:59,964:INFO:SubProcess create_model() called ==================================
2025-02-24 01:08:59,964:INFO:Initializing create_model()
2025-02-24 01:08:59,965:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:08:59,965:INFO:Checking exceptions
2025-02-24 01:08:59,965:INFO:Importing libraries
2025-02-24 01:08:59,965:INFO:Copying training dataset
2025-02-24 01:08:59,999:INFO:Defining folds
2025-02-24 01:09:00,000:INFO:Declaring metric variables
2025-02-24 01:09:00,010:INFO:Importing untrained model
2025-02-24 01:09:00,021:INFO:Gradient Boosting Classifier Imported successfully
2025-02-24 01:09:00,042:INFO:Starting cross validation
2025-02-24 01:09:00,059:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:09:19,066:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:19,073:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,088:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,103:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,178:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:19,186:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,202:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,218:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,343:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:19,351:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,366:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,381:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,564:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:19,570:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,581:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,594:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,618:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:19,626:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,642:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:19,656:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:20,068:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:20,076:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:20,090:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:20,105:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:20,250:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:20,255:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:20,268:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:20,281:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:22,053:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:22,060:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:22,077:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:22,091:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:22,321:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:22,329:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:22,348:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:22,364:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:22,410:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:22,417:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:22,429:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:22,442:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:22,462:INFO:Calculating mean and std
2025-02-24 01:09:22,464:INFO:Creating metrics dataframe
2025-02-24 01:09:22,469:INFO:Uploading results into container
2025-02-24 01:09:22,470:INFO:Uploading model into container now
2025-02-24 01:09:22,471:INFO:_master_model_container: 10
2025-02-24 01:09:22,471:INFO:_display_container: 2
2025-02-24 01:09:22,472:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-24 01:09:22,472:INFO:create_model() successfully completed......................................
2025-02-24 01:09:22,621:INFO:SubProcess create_model() end ==================================
2025-02-24 01:09:22,622:INFO:Creating metrics dataframe
2025-02-24 01:09:22,654:INFO:Initializing Linear Discriminant Analysis
2025-02-24 01:09:22,654:INFO:Total runtime is 1.431889756520589 minutes
2025-02-24 01:09:22,666:INFO:SubProcess create_model() called ==================================
2025-02-24 01:09:22,667:INFO:Initializing create_model()
2025-02-24 01:09:22,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:09:22,668:INFO:Checking exceptions
2025-02-24 01:09:22,668:INFO:Importing libraries
2025-02-24 01:09:22,668:INFO:Copying training dataset
2025-02-24 01:09:22,692:INFO:Defining folds
2025-02-24 01:09:22,693:INFO:Declaring metric variables
2025-02-24 01:09:22,702:INFO:Importing untrained model
2025-02-24 01:09:22,709:INFO:Linear Discriminant Analysis Imported successfully
2025-02-24 01:09:22,728:INFO:Starting cross validation
2025-02-24 01:09:22,745:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:09:26,058:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:26,068:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,100:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,115:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:26,130:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,132:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,162:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,184:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,224:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:26,234:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,255:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,275:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,490:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:26,498:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,515:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,532:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,778:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:26,786:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,802:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:26,802:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,809:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,817:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,824:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,824:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:26,832:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,841:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,848:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:26,861:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:27,064:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:27,072:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:27,085:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:27,097:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:27,139:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:27,145:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:27,155:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:27,167:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:27,255:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:09:27,260:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:27,270:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:27,280:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:27,306:INFO:Calculating mean and std
2025-02-24 01:09:27,309:INFO:Creating metrics dataframe
2025-02-24 01:09:27,312:INFO:Uploading results into container
2025-02-24 01:09:27,313:INFO:Uploading model into container now
2025-02-24 01:09:27,313:INFO:_master_model_container: 11
2025-02-24 01:09:27,313:INFO:_display_container: 2
2025-02-24 01:09:27,314:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-24 01:09:27,314:INFO:create_model() successfully completed......................................
2025-02-24 01:09:27,449:INFO:SubProcess create_model() end ==================================
2025-02-24 01:09:27,450:INFO:Creating metrics dataframe
2025-02-24 01:09:27,477:INFO:Initializing Extra Trees Classifier
2025-02-24 01:09:27,477:INFO:Total runtime is 1.512274618943532 minutes
2025-02-24 01:09:27,486:INFO:SubProcess create_model() called ==================================
2025-02-24 01:09:27,486:INFO:Initializing create_model()
2025-02-24 01:09:27,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:09:27,487:INFO:Checking exceptions
2025-02-24 01:09:27,487:INFO:Importing libraries
2025-02-24 01:09:27,487:INFO:Copying training dataset
2025-02-24 01:09:27,503:INFO:Defining folds
2025-02-24 01:09:27,503:INFO:Declaring metric variables
2025-02-24 01:09:27,513:INFO:Importing untrained model
2025-02-24 01:09:27,520:INFO:Extra Trees Classifier Imported successfully
2025-02-24 01:09:27,547:INFO:Starting cross validation
2025-02-24 01:09:27,563:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:09:33,146:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,194:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,212:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:09:33,233:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,443:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,475:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,506:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:09:33,518:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,588:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,703:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,725:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,730:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,731:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,773:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,776:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,788:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:09:33,792:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:09:33,802:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,807:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,853:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,891:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,923:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:09:33,932:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,937:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,959:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:33,971:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:09:33,983:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:34,398:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:34,404:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:34,412:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:34,413:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:34,416:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:34,418:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:09:34,422:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:09:34,425:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:34,426:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:34,428:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:34,431:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:09:34,437:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:34,465:INFO:Calculating mean and std
2025-02-24 01:09:34,467:INFO:Creating metrics dataframe
2025-02-24 01:09:34,471:INFO:Uploading results into container
2025-02-24 01:09:34,472:INFO:Uploading model into container now
2025-02-24 01:09:34,473:INFO:_master_model_container: 12
2025-02-24 01:09:34,473:INFO:_display_container: 2
2025-02-24 01:09:34,474:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-02-24 01:09:34,474:INFO:create_model() successfully completed......................................
2025-02-24 01:09:34,609:INFO:SubProcess create_model() end ==================================
2025-02-24 01:09:34,609:INFO:Creating metrics dataframe
2025-02-24 01:09:34,631:INFO:Initializing Extreme Gradient Boosting
2025-02-24 01:09:34,632:INFO:Total runtime is 1.631518526871999 minutes
2025-02-24 01:09:34,642:INFO:SubProcess create_model() called ==================================
2025-02-24 01:09:34,643:INFO:Initializing create_model()
2025-02-24 01:09:34,643:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:09:34,644:INFO:Checking exceptions
2025-02-24 01:09:34,644:INFO:Importing libraries
2025-02-24 01:09:34,644:INFO:Copying training dataset
2025-02-24 01:09:34,670:INFO:Defining folds
2025-02-24 01:09:34,671:INFO:Declaring metric variables
2025-02-24 01:09:34,680:INFO:Importing untrained model
2025-02-24 01:09:34,692:INFO:Extreme Gradient Boosting Imported successfully
2025-02-24 01:09:34,711:INFO:Starting cross validation
2025-02-24 01:09:34,724:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:09:40,074:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,095:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,115:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,147:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,163:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,177:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,227:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,241:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,254:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,329:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,348:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,370:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,420:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,440:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,455:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,759:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,771:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,783:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,861:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,873:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:40,885:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:41,268:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:41,282:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:41,298:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:41,530:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:41,541:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:41,549:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:41,558:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:41,563:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:41,578:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:09:41,607:INFO:Calculating mean and std
2025-02-24 01:09:41,611:INFO:Creating metrics dataframe
2025-02-24 01:09:41,618:INFO:Uploading results into container
2025-02-24 01:09:41,620:INFO:Uploading model into container now
2025-02-24 01:09:41,622:INFO:_master_model_container: 13
2025-02-24 01:09:41,622:INFO:_display_container: 2
2025-02-24 01:09:41,626:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-02-24 01:09:41,626:INFO:create_model() successfully completed......................................
2025-02-24 01:09:41,784:INFO:SubProcess create_model() end ==================================
2025-02-24 01:09:41,785:INFO:Creating metrics dataframe
2025-02-24 01:09:41,812:INFO:Initializing Light Gradient Boosting Machine
2025-02-24 01:09:41,813:INFO:Total runtime is 1.7512081265449522 minutes
2025-02-24 01:09:41,832:INFO:SubProcess create_model() called ==================================
2025-02-24 01:09:41,833:INFO:Initializing create_model()
2025-02-24 01:09:41,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:09:41,833:INFO:Checking exceptions
2025-02-24 01:09:41,833:INFO:Importing libraries
2025-02-24 01:09:41,835:INFO:Copying training dataset
2025-02-24 01:09:41,861:INFO:Defining folds
2025-02-24 01:09:41,862:INFO:Declaring metric variables
2025-02-24 01:09:41,869:INFO:Importing untrained model
2025-02-24 01:09:41,880:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-24 01:09:41,907:INFO:Starting cross validation
2025-02-24 01:09:41,926:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:09:45,032:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2025-02-24 01:09:45,036:WARNING:Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1560, in fit
    super().fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1049, in fit
    self._Booster = train(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/engine.py", line 297, in train
    booster = Booster(params=params, train_set=train_set)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3656, in __init__
    train_set.construct()
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2590, in construct
    self._lazy_init(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2227, in _lazy_init
    return self.set_feature_name(feature_name)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3046, in set_feature_name
    _safe_call(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 313, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode("utf-8"))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2025-02-24 01:09:45,037:INFO:Initializing create_model()
2025-02-24 01:09:45,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:09:45,038:INFO:Checking exceptions
2025-02-24 01:09:45,038:INFO:Importing libraries
2025-02-24 01:09:45,038:INFO:Copying training dataset
2025-02-24 01:09:45,056:INFO:Defining folds
2025-02-24 01:09:45,056:INFO:Declaring metric variables
2025-02-24 01:09:45,064:INFO:Importing untrained model
2025-02-24 01:09:45,072:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-24 01:09:45,084:INFO:Starting cross validation
2025-02-24 01:09:45,096:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:09:48,204:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2025-02-24 01:09:48,205:ERROR:Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1560, in fit
    super().fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1049, in fit
    self._Booster = train(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/engine.py", line 297, in train
    booster = Booster(params=params, train_set=train_set)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3656, in __init__
    train_set.construct()
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2590, in construct
    self._lazy_init(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2227, in _lazy_init
    return self.set_feature_name(feature_name)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3046, in set_feature_name
    _safe_call(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 313, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode("utf-8"))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1560, in fit
    super().fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1049, in fit
    self._Booster = train(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/engine.py", line 297, in train
    booster = Booster(params=params, train_set=train_set)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3656, in __init__
    train_set.construct()
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2590, in construct
    self._lazy_init(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2227, in _lazy_init
    return self.set_feature_name(feature_name)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3046, in set_feature_name
    _safe_call(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 313, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode("utf-8"))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2025-02-24 01:09:48,206:INFO:Initializing CatBoost Classifier
2025-02-24 01:09:48,206:INFO:Total runtime is 1.8577683051427203 minutes
2025-02-24 01:09:48,215:INFO:SubProcess create_model() called ==================================
2025-02-24 01:09:48,215:INFO:Initializing create_model()
2025-02-24 01:09:48,215:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:09:48,215:INFO:Checking exceptions
2025-02-24 01:09:48,215:INFO:Importing libraries
2025-02-24 01:09:48,216:INFO:Copying training dataset
2025-02-24 01:09:48,230:INFO:Defining folds
2025-02-24 01:09:48,230:INFO:Declaring metric variables
2025-02-24 01:09:48,238:INFO:Importing untrained model
2025-02-24 01:09:48,246:INFO:CatBoost Classifier Imported successfully
2025-02-24 01:09:48,261:INFO:Starting cross validation
2025-02-24 01:09:48,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:10:40,323:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:40,347:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:40,368:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:41,133:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:41,157:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:41,179:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:41,743:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:41,766:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:41,788:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,178:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,200:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,222:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,455:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,473:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,487:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,502:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,504:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,517:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,520:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,530:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,537:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,556:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,569:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,582:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,641:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,658:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,675:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,787:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,800:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,811:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:42,833:INFO:Calculating mean and std
2025-02-24 01:10:42,836:INFO:Creating metrics dataframe
2025-02-24 01:10:42,840:INFO:Uploading results into container
2025-02-24 01:10:42,841:INFO:Uploading model into container now
2025-02-24 01:10:42,842:INFO:_master_model_container: 14
2025-02-24 01:10:42,843:INFO:_display_container: 2
2025-02-24 01:10:42,843:INFO:<catboost.core.CatBoostClassifier object at 0x7f9177e91970>
2025-02-24 01:10:42,843:INFO:create_model() successfully completed......................................
2025-02-24 01:10:42,995:INFO:SubProcess create_model() end ==================================
2025-02-24 01:10:42,996:INFO:Creating metrics dataframe
2025-02-24 01:10:43,029:INFO:Initializing Dummy Classifier
2025-02-24 01:10:43,030:INFO:Total runtime is 2.771485364437103 minutes
2025-02-24 01:10:43,042:INFO:SubProcess create_model() called ==================================
2025-02-24 01:10:43,043:INFO:Initializing create_model()
2025-02-24 01:10:43,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91776754f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:10:43,044:INFO:Checking exceptions
2025-02-24 01:10:43,044:INFO:Importing libraries
2025-02-24 01:10:43,044:INFO:Copying training dataset
2025-02-24 01:10:43,070:INFO:Defining folds
2025-02-24 01:10:43,070:INFO:Declaring metric variables
2025-02-24 01:10:43,077:INFO:Importing untrained model
2025-02-24 01:10:43,087:INFO:Dummy Classifier Imported successfully
2025-02-24 01:10:43,108:INFO:Starting cross validation
2025-02-24 01:10:43,122:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:10:45,755:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,774:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,776:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,784:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:10:45,793:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,795:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,804:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:10:45,813:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,871:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,873:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,888:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,890:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,897:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:10:45,899:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:10:45,906:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,907:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,908:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,922:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:45,931:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:10:45,941:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,109:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,124:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,133:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:10:46,141:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,473:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,480:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,483:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,485:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,491:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:10:46,492:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,495:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,498:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,499:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:10:46,502:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:10:46,504:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,507:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,535:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,548:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,555:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:10:46,560:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:10:46,583:INFO:Calculating mean and std
2025-02-24 01:10:46,586:INFO:Creating metrics dataframe
2025-02-24 01:10:46,590:INFO:Uploading results into container
2025-02-24 01:10:46,592:INFO:Uploading model into container now
2025-02-24 01:10:46,592:INFO:_master_model_container: 15
2025-02-24 01:10:46,593:INFO:_display_container: 2
2025-02-24 01:10:46,593:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-02-24 01:10:46,593:INFO:create_model() successfully completed......................................
2025-02-24 01:10:46,737:INFO:SubProcess create_model() end ==================================
2025-02-24 01:10:46,737:INFO:Creating metrics dataframe
2025-02-24 01:10:46,763:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-24 01:10:46,782:INFO:Initializing create_model()
2025-02-24 01:10:46,783:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:10:46,783:INFO:Checking exceptions
2025-02-24 01:10:46,787:INFO:Importing libraries
2025-02-24 01:10:46,787:INFO:Copying training dataset
2025-02-24 01:10:46,807:INFO:Defining folds
2025-02-24 01:10:46,807:INFO:Declaring metric variables
2025-02-24 01:10:46,808:INFO:Importing untrained model
2025-02-24 01:10:46,808:INFO:Declaring custom model
2025-02-24 01:10:46,810:INFO:Extreme Gradient Boosting Imported successfully
2025-02-24 01:10:46,823:INFO:Cross validation set to False
2025-02-24 01:10:46,823:INFO:Fitting Model
2025-02-24 01:11:34,476:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-02-24 01:11:34,477:INFO:create_model() successfully completed......................................
2025-02-24 01:11:34,757:INFO:_master_model_container: 15
2025-02-24 01:11:34,758:INFO:_display_container: 2
2025-02-24 01:11:34,759:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-02-24 01:11:34,760:INFO:compare_models() successfully completed......................................
2025-02-24 01:11:34,874:INFO:Initializing get_config()
2025-02-24 01:11:34,874:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, variable=X_train)
2025-02-24 01:11:34,875:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-24 01:11:34,875:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-24 01:11:34,911:INFO:Variable:  returned as                       Time Day_of_week Age_band_of_driver Sex_of_driver  \
9441   1900-01-01 20:00:00    Thursday              31-50          Male   
7919   1900-01-01 12:58:00    Thursday              18-30          Male   
7172   1900-01-01 00:25:00    Saturday              18-30          Male   
9252   1900-01-01 17:30:00     Tuesday            Over 51          Male   
7149   1900-01-01 19:58:00     Tuesday            Over 51          Male   
...                    ...         ...                ...           ...   
8512   1900-01-01 15:20:00    Thursday              18-30          Male   
1481   1900-01-01 13:00:00      Sunday              31-50          Male   
3580   1900-01-01 14:30:00     Tuesday              18-30        Female   
10051  1900-01-01 20:55:00      Friday            Over 51          Male   
6713   1900-01-01 22:45:00    Saturday              18-30          Male   

         Educational_level Vehicle_driver_relation Driving_experience  \
9441   Secondary education                Employee              1-2yr   
7919     Primary education                Employee              2-5yr   
7172   Secondary education                   Owner              2-5yr   
9252   Secondary education                Employee         Above 10yr   
7149   Secondary education                Employee             5-10yr   
...                    ...                     ...                ...   
8512   Secondary education                Employee              2-5yr   
1481     Primary education                Employee             5-10yr   
3580   Secondary education                Employee             5-10yr   
10051  Secondary education                Employee             5-10yr   
6713     Primary education                Employee             5-10yr   

      Type_of_vehicle Owner_of_vehicle Service_year_of_vehicle  ...  \
9441              Car            Owner        Moderate Vehicle  ...   
7919              Car            Owner        Moderate Vehicle  ...   
7172        Small Bus            Owner        Moderate Vehicle  ...   
9252      Large Truck            Owner             Old Vehicle  ...   
7149              Car     Governmental        Moderate Vehicle  ...   
...               ...              ...                     ...  ...   
8512        Large Bus            Owner        Moderate Vehicle  ...   
1481      Large Truck            Owner        Moderate Vehicle  ...   
3580      Large Truck            Owner             New Vehicle  ...   
10051             Car            Owner        Moderate Vehicle  ...   
6713              Car            Owner        Moderate Vehicle  ...   

      Vehicle_movement   Casualty_class Sex_of_casualty Age_band_of_casualty  \
9441    Moving forward  Driver or rider            Male                18-30   
7919    Moving forward  Driver or rider            Male                31-50   
7172    Moving forward       Pedestrian          Female                18-30   
9252    Moving forward       Pedestrian            Male             Under 18   
7149          Stopping       Pedestrian          Female                18-30   
...                ...              ...             ...                  ...   
8512    Moving forward       Pedestrian          Female                18-30   
1481    Moving forward  Driver or rider            Male                18-30   
3580    Moving forward  Driver or rider            Male                18-30   
10051   Moving forward  Driver or rider            Male                18-30   
6713   Moving backward       Pedestrian          Female                18-30   

      Casualty_severity Work_of_casuality Fitness_of_casuality  \
9441                 na           Unknown               Normal   
7919                  3     Self-employed               Normal   
7172                  3            Driver               Normal   
9252                  3     Self-employed               Normal   
7149                  3            Driver               Normal   
...                 ...               ...                  ...   
8512                  3            Driver               Normal   
1481                  3     Self-employed               Normal   
3580                  3     Self-employed               Normal   
10051                na            Driver               Normal   
6713                  3            Driver               Normal   

                                     Pedestrian_movement Cause_of_accident  \
9441                                    Not a Pedestrian       Human Error   
7919                                    Not a Pedestrian       Human Error   
7172   Crossing from nearside - masked by parked or s...       Human Error   
9252                                    Unknown or other         Violation   
7149                                    Not a Pedestrian    Vehicle Issues   
...                                                  ...               ...   
8512   Crossing from nearside - masked by parked or s...       Human Error   
1481                                    Not a Pedestrian         Violation   
3580                                    Not a Pedestrian       Human Error   
10051                                   Not a Pedestrian       Human Error   
6713                                    Not a Pedestrian       Human Error   

       part_of_day  
9441         Malam  
7919         Siang  
7172         Malam  
9252          Sore  
7149         Malam  
...            ...  
8512          Sore  
1481         Siang  
3580         Siang  
10051        Malam  
6713         Malam  

[8621 rows x 31 columns]
2025-02-24 01:11:34,912:INFO:get_config() successfully completed......................................
2025-02-24 01:11:34,967:INFO:Initializing create_model()
2025-02-24 01:11:34,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:11:34,967:INFO:Checking exceptions
2025-02-24 01:11:35,004:INFO:Importing libraries
2025-02-24 01:11:35,005:INFO:Copying training dataset
2025-02-24 01:11:35,026:INFO:Defining folds
2025-02-24 01:11:35,026:INFO:Declaring metric variables
2025-02-24 01:11:35,035:INFO:Importing untrained model
2025-02-24 01:11:35,048:INFO:Random Forest Classifier Imported successfully
2025-02-24 01:11:35,071:INFO:Starting cross validation
2025-02-24 01:11:35,085:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:11:41,259:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,296:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,318:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:11:41,334:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,373:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,408:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,425:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:11:41,438:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,502:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,513:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,528:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,539:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:11:41,540:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,550:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,567:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,626:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,647:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,662:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:11:41,669:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,677:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,693:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,706:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:11:41,717:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,915:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,935:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,945:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:11:41,954:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,967:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,974:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,986:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,995:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:41,997:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:11:42,009:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:42,010:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:11:42,022:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:42,163:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:42,179:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:42,187:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:11:42,194:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:11:42,222:INFO:Calculating mean and std
2025-02-24 01:11:42,226:INFO:Creating metrics dataframe
2025-02-24 01:11:42,242:INFO:Finalizing model
2025-02-24 01:11:44,579:INFO:Uploading results into container
2025-02-24 01:11:44,581:INFO:Uploading model into container now
2025-02-24 01:11:44,606:INFO:_master_model_container: 16
2025-02-24 01:11:44,606:INFO:_display_container: 3
2025-02-24 01:11:44,607:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-24 01:11:44,608:INFO:create_model() successfully completed......................................
2025-02-24 01:11:44,776:INFO:Initializing tune_model()
2025-02-24 01:11:44,777:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>)
2025-02-24 01:11:44,777:INFO:Checking exceptions
2025-02-24 01:11:44,818:INFO:Copying training dataset
2025-02-24 01:11:44,833:INFO:Checking base model
2025-02-24 01:11:44,833:INFO:Base model : Random Forest Classifier
2025-02-24 01:11:44,844:INFO:Declaring metric variables
2025-02-24 01:11:44,853:INFO:Defining Hyperparameters
2025-02-24 01:11:45,038:INFO:Tuning with n_jobs=-1
2025-02-24 01:11:45,038:INFO:Initializing RandomizedSearchCV
2025-02-24 01:12:50,057:INFO:best_params: {'actual_estimator__n_estimators': 70, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 3, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': False}
2025-02-24 01:12:50,059:INFO:Hyperparameter search completed
2025-02-24 01:12:50,059:INFO:SubProcess create_model() called ==================================
2025-02-24 01:12:50,060:INFO:Initializing create_model()
2025-02-24 01:12:50,060:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f91773df0a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 70, 'min_samples_split': 9, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.1, 'max_features': 'sqrt', 'max_depth': 3, 'criterion': 'gini', 'class_weight': {}, 'bootstrap': False})
2025-02-24 01:12:50,060:INFO:Checking exceptions
2025-02-24 01:12:50,060:INFO:Importing libraries
2025-02-24 01:12:50,060:INFO:Copying training dataset
2025-02-24 01:12:50,075:INFO:Defining folds
2025-02-24 01:12:50,076:INFO:Declaring metric variables
2025-02-24 01:12:50,085:INFO:Importing untrained model
2025-02-24 01:12:50,085:INFO:Declaring custom model
2025-02-24 01:12:50,093:INFO:Random Forest Classifier Imported successfully
2025-02-24 01:12:50,107:INFO:Starting cross validation
2025-02-24 01:12:50,123:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:12:53,644:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,663:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,672:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:12:53,682:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,735:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,740:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,756:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,757:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,766:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:12:53,770:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:12:53,777:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,783:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,784:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,807:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,819:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:12:53,823:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,829:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,839:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,846:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:12:53,855:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,943:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,962:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:53,970:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:12:53,978:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,150:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,165:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,173:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:12:54,180:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,190:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,206:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,213:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:12:54,222:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,270:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,288:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,297:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:12:54,306:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,493:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,512:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,518:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:12:54,525:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:12:54,566:INFO:Calculating mean and std
2025-02-24 01:12:54,570:INFO:Creating metrics dataframe
2025-02-24 01:12:54,589:INFO:Finalizing model
2025-02-24 01:12:56,504:INFO:Uploading results into container
2025-02-24 01:12:56,506:INFO:Uploading model into container now
2025-02-24 01:12:56,507:INFO:_master_model_container: 17
2025-02-24 01:12:56,508:INFO:_display_container: 4
2025-02-24 01:12:56,509:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=70, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-24 01:12:56,509:INFO:create_model() successfully completed......................................
2025-02-24 01:12:56,681:INFO:SubProcess create_model() end ==================================
2025-02-24 01:12:56,681:INFO:choose_better activated
2025-02-24 01:12:56,690:INFO:SubProcess create_model() called ==================================
2025-02-24 01:12:56,692:INFO:Initializing create_model()
2025-02-24 01:12:56,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:12:56,692:INFO:Checking exceptions
2025-02-24 01:12:56,696:INFO:Importing libraries
2025-02-24 01:12:56,696:INFO:Copying training dataset
2025-02-24 01:12:56,720:INFO:Defining folds
2025-02-24 01:12:56,720:INFO:Declaring metric variables
2025-02-24 01:12:56,720:INFO:Importing untrained model
2025-02-24 01:12:56,720:INFO:Declaring custom model
2025-02-24 01:12:56,722:INFO:Random Forest Classifier Imported successfully
2025-02-24 01:12:56,722:INFO:Starting cross validation
2025-02-24 01:12:56,735:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:13:03,195:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,227:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,256:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,649:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,673:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,693:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,706:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,709:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,711:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:13:03,727:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:13:03,727:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,738:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,742:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,755:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:13:03,769:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,794:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,820:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,831:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:13:03,841:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,843:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,853:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,869:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,878:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,882:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:13:03,883:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,889:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:13:03,891:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,898:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,901:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,908:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,910:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:13:03,919:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,926:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:03,937:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:13:03,946:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:04,295:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:04,308:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:04,315:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:13:04,321:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:13:04,344:INFO:Calculating mean and std
2025-02-24 01:13:04,346:INFO:Creating metrics dataframe
2025-02-24 01:13:04,351:INFO:Finalizing model
2025-02-24 01:13:06,520:INFO:Uploading results into container
2025-02-24 01:13:06,522:INFO:Uploading model into container now
2025-02-24 01:13:06,523:INFO:_master_model_container: 18
2025-02-24 01:13:06,523:INFO:_display_container: 5
2025-02-24 01:13:06,524:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-24 01:13:06,524:INFO:create_model() successfully completed......................................
2025-02-24 01:13:06,701:INFO:SubProcess create_model() end ==================================
2025-02-24 01:13:06,704:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8528
2025-02-24 01:13:06,706:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=70, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8456
2025-02-24 01:13:06,708:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2025-02-24 01:13:06,708:INFO:choose_better completed
2025-02-24 01:13:06,708:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-02-24 01:13:06,746:INFO:_master_model_container: 18
2025-02-24 01:13:06,746:INFO:_display_container: 4
2025-02-24 01:13:06,748:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-24 01:13:06,748:INFO:tune_model() successfully completed......................................
2025-02-24 01:13:06,931:INFO:Initializing evaluate_model()
2025-02-24 01:13:06,931:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-24 01:13:06,977:INFO:Initializing plot_model()
2025-02-24 01:13:06,977:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:13:06,977:INFO:Checking exceptions
2025-02-24 01:13:07,071:INFO:Preloading libraries
2025-02-24 01:13:07,132:INFO:Copying training dataset
2025-02-24 01:13:07,133:INFO:Plot type: pipeline
2025-02-24 01:13:07,659:INFO:Visual Rendered Successfully
2025-02-24 01:13:07,823:INFO:plot_model() successfully completed......................................
2025-02-24 01:13:25,983:INFO:Initializing plot_model()
2025-02-24 01:13:25,984:INFO:plot_model(plot=manifold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:13:25,984:INFO:Checking exceptions
2025-02-24 01:13:33,004:INFO:Initializing plot_model()
2025-02-24 01:13:33,005:INFO:plot_model(plot=ks, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:13:33,005:INFO:Checking exceptions
2025-02-24 01:13:33,086:INFO:Preloading libraries
2025-02-24 01:13:33,129:INFO:Copying training dataset
2025-02-24 01:13:33,129:INFO:Plot type: ks
2025-02-24 01:13:33,131:INFO:Generating predictions / predict_proba on X_test
2025-02-24 01:13:34,585:INFO:Initializing plot_model()
2025-02-24 01:13:34,586:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:13:34,586:INFO:Checking exceptions
2025-02-24 01:13:34,670:INFO:Preloading libraries
2025-02-24 01:13:34,717:INFO:Copying training dataset
2025-02-24 01:13:34,717:INFO:Plot type: pipeline
2025-02-24 01:13:34,908:INFO:Visual Rendered Successfully
2025-02-24 01:13:35,122:INFO:plot_model() successfully completed......................................
2025-02-24 01:13:35,722:INFO:Initializing plot_model()
2025-02-24 01:13:35,723:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:13:35,723:INFO:Checking exceptions
2025-02-24 01:13:35,795:INFO:Preloading libraries
2025-02-24 01:13:35,833:INFO:Copying training dataset
2025-02-24 01:13:35,833:INFO:Plot type: parameter
2025-02-24 01:13:35,840:INFO:Visual Rendered Successfully
2025-02-24 01:13:36,038:INFO:plot_model() successfully completed......................................
2025-02-24 01:13:38,043:INFO:Initializing plot_model()
2025-02-24 01:13:38,044:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:13:38,045:INFO:Checking exceptions
2025-02-24 01:13:39,385:INFO:Initializing plot_model()
2025-02-24 01:13:39,385:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:13:39,385:INFO:Checking exceptions
2025-02-24 01:13:39,438:INFO:Preloading libraries
2025-02-24 01:13:39,470:INFO:Copying training dataset
2025-02-24 01:13:39,470:INFO:Plot type: auc
2025-02-24 01:13:39,978:INFO:Fitting Model
2025-02-24 01:13:39,990:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2025-02-24 01:13:39,991:INFO:Scoring test/hold-out set
2025-02-24 01:13:40,479:INFO:Visual Rendered Successfully
2025-02-24 01:13:40,624:INFO:plot_model() successfully completed......................................
2025-02-24 01:13:40,762:INFO:Initializing plot_model()
2025-02-24 01:13:40,762:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:13:40,763:INFO:Checking exceptions
2025-02-24 01:13:40,831:INFO:Preloading libraries
2025-02-24 01:13:40,869:INFO:Copying training dataset
2025-02-24 01:13:40,870:INFO:Plot type: vc
2025-02-24 01:13:40,871:INFO:Determining param_name
2025-02-24 01:13:40,872:INFO:param_name: max_depth
2025-02-24 01:13:41,412:INFO:Fitting Model
2025-02-24 01:13:45,270:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py:752: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2025-02-24 01:14:01,589:INFO:Visual Rendered Successfully
2025-02-24 01:14:01,864:INFO:plot_model() successfully completed......................................
2025-02-24 01:14:01,930:INFO:Initializing plot_model()
2025-02-24 01:14:01,930:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:14:01,930:INFO:Checking exceptions
2025-02-24 01:14:04,033:INFO:Initializing plot_model()
2025-02-24 01:14:04,034:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:14:04,035:INFO:Checking exceptions
2025-02-24 01:14:04,111:INFO:Preloading libraries
2025-02-24 01:14:04,160:INFO:Copying training dataset
2025-02-24 01:14:04,161:INFO:Plot type: confusion_matrix
2025-02-24 01:14:04,581:INFO:Fitting Model
2025-02-24 01:14:04,582:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2025-02-24 01:14:04,583:INFO:Scoring test/hold-out set
2025-02-24 01:14:04,954:INFO:Visual Rendered Successfully
2025-02-24 01:14:05,137:INFO:plot_model() successfully completed......................................
2025-02-24 01:14:13,566:INFO:Initializing plot_model()
2025-02-24 01:14:13,566:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:14:13,566:INFO:Checking exceptions
2025-02-24 01:14:13,641:INFO:Preloading libraries
2025-02-24 01:14:13,672:INFO:Copying training dataset
2025-02-24 01:14:13,672:INFO:Plot type: feature
2025-02-24 01:14:13,674:WARNING:No coef_ found. Trying feature_importances_
2025-02-24 01:14:14,041:INFO:Visual Rendered Successfully
2025-02-24 01:14:14,255:INFO:plot_model() successfully completed......................................
2025-02-24 01:14:31,963:INFO:Initializing plot_model()
2025-02-24 01:14:31,964:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:14:31,964:INFO:Checking exceptions
2025-02-24 01:14:32,044:INFO:Preloading libraries
2025-02-24 01:14:32,076:INFO:Copying training dataset
2025-02-24 01:14:32,076:INFO:Plot type: feature_all
2025-02-24 01:14:32,181:WARNING:No coef_ found. Trying feature_importances_
2025-02-24 01:14:33,952:INFO:Visual Rendered Successfully
2025-02-24 01:14:34,130:INFO:plot_model() successfully completed......................................
2025-02-24 01:14:39,598:INFO:Initializing plot_model()
2025-02-24 01:14:39,598:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:14:39,599:INFO:Checking exceptions
2025-02-24 01:14:39,674:INFO:Preloading libraries
2025-02-24 01:14:39,704:INFO:Copying training dataset
2025-02-24 01:14:39,704:INFO:Plot type: boundary
2025-02-24 01:14:39,936:INFO:Fitting StandardScaler()
2025-02-24 01:14:39,960:INFO:Fitting PCA()
2025-02-24 01:14:40,387:INFO:Fitting Model
2025-02-24 01:14:42,444:INFO:Visual Rendered Successfully
2025-02-24 01:14:42,700:INFO:plot_model() successfully completed......................................
2025-02-24 01:14:47,178:INFO:Initializing plot_model()
2025-02-24 01:14:47,178:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:14:47,178:INFO:Checking exceptions
2025-02-24 01:14:47,251:INFO:Preloading libraries
2025-02-24 01:14:47,281:INFO:Copying training dataset
2025-02-24 01:14:47,282:INFO:Plot type: class_report
2025-02-24 01:14:47,675:INFO:Fitting Model
2025-02-24 01:14:47,675:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2025-02-24 01:14:47,676:INFO:Scoring test/hold-out set
2025-02-24 01:14:48,187:INFO:Visual Rendered Successfully
2025-02-24 01:14:48,368:INFO:plot_model() successfully completed......................................
2025-02-24 01:14:51,506:INFO:Initializing plot_model()
2025-02-24 01:14:51,506:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:14:51,506:INFO:Checking exceptions
2025-02-24 01:14:53,522:INFO:Initializing plot_model()
2025-02-24 01:14:53,522:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:14:53,522:INFO:Checking exceptions
2025-02-24 01:14:53,598:INFO:Preloading libraries
2025-02-24 01:14:53,631:INFO:Copying training dataset
2025-02-24 01:14:53,631:INFO:Plot type: learning
2025-02-24 01:14:54,065:INFO:Fitting Model
2025-02-24 01:15:05,327:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py:752: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2025-02-24 01:15:19,689:INFO:Visual Rendered Successfully
2025-02-24 01:15:19,854:INFO:plot_model() successfully completed......................................
2025-02-24 01:15:19,876:INFO:Initializing plot_model()
2025-02-24 01:15:19,877:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f916f1e01f0>, system=True)
2025-02-24 01:15:19,877:INFO:Checking exceptions
2025-02-24 01:15:19,936:INFO:Preloading libraries
2025-02-24 01:15:19,991:INFO:Copying training dataset
2025-02-24 01:15:19,992:INFO:Plot type: tree
2025-02-24 01:15:21,935:INFO:Plotting decision trees
2025-02-24 01:15:22,030:INFO:Plotting tree 0
2025-02-24 01:15:32,141:INFO:Plotting tree 1
2025-02-24 01:15:39,771:INFO:Plotting tree 2
2025-02-24 01:15:46,952:INFO:Plotting tree 3
2025-02-24 01:15:53,276:INFO:Plotting tree 4
2025-02-24 01:16:01,243:INFO:Plotting tree 5
2025-02-24 01:16:09,267:INFO:Plotting tree 6
2025-02-24 01:16:17,537:INFO:Plotting tree 7
2025-02-24 01:16:27,838:INFO:Plotting tree 8
2025-02-24 01:16:36,462:INFO:Plotting tree 9
2025-02-24 01:16:45,740:INFO:Plotting tree 10
2025-02-24 01:16:54,740:INFO:Plotting tree 11
2025-02-24 01:17:00,466:INFO:Plotting tree 12
2025-02-24 01:17:08,342:INFO:Plotting tree 13
2025-02-24 01:17:18,495:INFO:Plotting tree 14
2025-02-24 01:17:24,383:INFO:Plotting tree 15
2025-02-24 01:17:31,642:INFO:Plotting tree 16
2025-02-24 01:17:38,183:INFO:Plotting tree 17
2025-02-24 01:17:45,773:INFO:Plotting tree 18
2025-02-24 01:17:55,340:INFO:Plotting tree 19
2025-02-24 01:18:05,723:INFO:Plotting tree 20
2025-02-24 01:19:30,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 01:19:30,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 01:19:30,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 01:19:30,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 01:19:31,156:INFO:PyCaret ClassificationExperiment
2025-02-24 01:19:31,156:INFO:Logging name: clf-default-name
2025-02-24 01:19:31,156:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-24 01:19:31,156:INFO:version 3.3.2
2025-02-24 01:19:31,156:INFO:Initializing setup()
2025-02-24 01:19:31,156:INFO:self.USI: 4724
2025-02-24 01:19:31,157:INFO:self._variable_keys: {'fix_imbalance', 'X_train', 'X_test', 'log_plots_param', 'y_train', 'X', 'gpu_n_jobs_param', '_ml_usecase', 'fold_generator', 'y_test', 'USI', 'seed', 'data', 'exp_name_log', 'logging_param', 'exp_id', 'pipeline', 'html_param', 'target_param', 'fold_shuffle_param', '_available_plots', 'idx', 'fold_groups_param', 'y', 'memory', 'is_multiclass', 'n_jobs_param', 'gpu_param'}
2025-02-24 01:19:31,157:INFO:Checking environment
2025-02-24 01:19:31,157:INFO:python_version: 3.9.21
2025-02-24 01:19:31,157:INFO:python_build: ('main', 'Dec 11 2024 16:24:11')
2025-02-24 01:19:31,157:INFO:machine: x86_64
2025-02-24 01:19:31,157:INFO:platform: Linux-6.12.15-200.fc41.x86_64-x86_64-with-glibc2.40
2025-02-24 01:19:31,157:INFO:Memory: svmem(total=16464158720, available=8847101952, percent=46.3, used=5871333376, free=6780358656, active=3710513152, inactive=2647363584, buffers=319488, cached=3812147200, shared=1387339776, slab=679432192)
2025-02-24 01:19:31,159:INFO:Physical Core: 14
2025-02-24 01:19:31,160:INFO:Logical Core: 20
2025-02-24 01:19:31,160:INFO:Checking libraries
2025-02-24 01:19:31,160:INFO:System:
2025-02-24 01:19:31,160:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:24:11)  [GCC 11.2.0]
2025-02-24 01:19:31,160:INFO:executable: /home/ahmadnafim/anaconda3/envs/bcc_intern/bin/python
2025-02-24 01:19:31,160:INFO:   machine: Linux-6.12.15-200.fc41.x86_64-x86_64-with-glibc2.40
2025-02-24 01:19:31,160:INFO:PyCaret required dependencies:
2025-02-24 01:19:31,259:INFO:                 pip: 25.0
2025-02-24 01:19:31,259:INFO:          setuptools: 75.8.0
2025-02-24 01:19:31,259:INFO:             pycaret: 3.3.2
2025-02-24 01:19:31,259:INFO:             IPython: 8.18.1
2025-02-24 01:19:31,259:INFO:          ipywidgets: 8.1.5
2025-02-24 01:19:31,259:INFO:                tqdm: 4.67.1
2025-02-24 01:19:31,259:INFO:               numpy: 1.26.4
2025-02-24 01:19:31,259:INFO:              pandas: 2.1.4
2025-02-24 01:19:31,259:INFO:              jinja2: 3.1.5
2025-02-24 01:19:31,259:INFO:               scipy: 1.11.4
2025-02-24 01:19:31,259:INFO:              joblib: 1.3.2
2025-02-24 01:19:31,259:INFO:             sklearn: 1.4.2
2025-02-24 01:19:31,259:INFO:                pyod: 2.0.3
2025-02-24 01:19:31,260:INFO:            imblearn: 0.12.4
2025-02-24 01:19:31,260:INFO:   category_encoders: 2.6.4
2025-02-24 01:19:31,260:INFO:            lightgbm: 4.6.0
2025-02-24 01:19:31,260:INFO:               numba: 0.60.0
2025-02-24 01:19:31,260:INFO:            requests: 2.32.3
2025-02-24 01:19:31,260:INFO:          matplotlib: 3.7.5
2025-02-24 01:19:31,260:INFO:          scikitplot: 0.3.7
2025-02-24 01:19:31,260:INFO:         yellowbrick: 1.5
2025-02-24 01:19:31,260:INFO:              plotly: 5.24.1
2025-02-24 01:19:31,260:INFO:    plotly-resampler: Not installed
2025-02-24 01:19:31,260:INFO:             kaleido: 0.2.1
2025-02-24 01:19:31,260:INFO:           schemdraw: 0.15
2025-02-24 01:19:31,260:INFO:         statsmodels: 0.14.4
2025-02-24 01:19:31,260:INFO:              sktime: 0.26.0
2025-02-24 01:19:31,260:INFO:               tbats: 1.1.3
2025-02-24 01:19:31,260:INFO:            pmdarima: 2.0.4
2025-02-24 01:19:31,260:INFO:              psutil: 6.1.1
2025-02-24 01:19:31,260:INFO:          markupsafe: 3.0.2
2025-02-24 01:19:31,260:INFO:             pickle5: Not installed
2025-02-24 01:19:31,260:INFO:         cloudpickle: 3.1.1
2025-02-24 01:19:31,260:INFO:         deprecation: 2.1.0
2025-02-24 01:19:31,260:INFO:              xxhash: 3.5.0
2025-02-24 01:19:31,260:INFO:           wurlitzer: 3.1.1
2025-02-24 01:19:31,260:INFO:PyCaret optional dependencies:
2025-02-24 01:19:31,374:INFO:                shap: Not installed
2025-02-24 01:19:31,374:INFO:           interpret: Not installed
2025-02-24 01:19:31,374:INFO:                umap: Not installed
2025-02-24 01:19:31,374:INFO:     ydata_profiling: Not installed
2025-02-24 01:19:31,374:INFO:  explainerdashboard: Not installed
2025-02-24 01:19:31,374:INFO:             autoviz: Not installed
2025-02-24 01:19:31,374:INFO:           fairlearn: Not installed
2025-02-24 01:19:31,375:INFO:          deepchecks: Not installed
2025-02-24 01:19:31,375:INFO:             xgboost: 2.1.4
2025-02-24 01:19:31,375:INFO:            catboost: 1.2.7
2025-02-24 01:19:31,375:INFO:              kmodes: Not installed
2025-02-24 01:19:31,375:INFO:             mlxtend: Not installed
2025-02-24 01:19:31,375:INFO:       statsforecast: Not installed
2025-02-24 01:19:31,375:INFO:        tune_sklearn: Not installed
2025-02-24 01:19:31,375:INFO:                 ray: Not installed
2025-02-24 01:19:31,375:INFO:            hyperopt: Not installed
2025-02-24 01:19:31,375:INFO:              optuna: Not installed
2025-02-24 01:19:31,375:INFO:               skopt: Not installed
2025-02-24 01:19:31,375:INFO:              mlflow: Not installed
2025-02-24 01:19:31,375:INFO:              gradio: Not installed
2025-02-24 01:19:31,375:INFO:             fastapi: Not installed
2025-02-24 01:19:31,375:INFO:             uvicorn: Not installed
2025-02-24 01:19:31,375:INFO:              m2cgen: Not installed
2025-02-24 01:19:31,375:INFO:           evidently: Not installed
2025-02-24 01:19:31,375:INFO:               fugue: Not installed
2025-02-24 01:19:31,375:INFO:           streamlit: Not installed
2025-02-24 01:19:31,376:INFO:             prophet: Not installed
2025-02-24 01:19:31,376:INFO:None
2025-02-24 01:19:31,376:INFO:Set up data.
2025-02-24 01:19:31,486:INFO:Set up folding strategy.
2025-02-24 01:19:31,486:INFO:Set up train/test split.
2025-02-24 01:19:31,660:INFO:Set up index.
2025-02-24 01:19:31,661:INFO:Assigning column types.
2025-02-24 01:19:31,670:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-24 01:19:31,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-24 01:19:31,769:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 01:19:31,837:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:19:31,843:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:19:31,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-24 01:19:31,986:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 01:19:32,046:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:19:32,051:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:19:32,052:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-24 01:19:32,148:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 01:19:32,208:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:19:32,214:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:19:32,314:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 01:19:32,387:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:19:32,394:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:19:32,395:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-24 01:19:32,543:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:19:32,548:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:19:32,699:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:19:32,705:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:19:32,709:INFO:Preparing preprocessing pipeline...
2025-02-24 01:19:32,713:INFO:Set up label encoding.
2025-02-24 01:19:32,713:INFO:Set up simple imputation.
2025-02-24 01:19:32,734:INFO:Set up encoding of ordinal features.
2025-02-24 01:19:32,742:INFO:Set up encoding of categorical features.
2025-02-24 01:19:35,579:INFO:Finished creating preprocessing pipeline.
2025-02-24 01:19:35,638:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              kee...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-02-24 01:19:35,638:INFO:Creating final display dataframe.
2025-02-24 01:19:38,176:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                 123  
1                                   Accident_severity  
2                                          Multiclass  
3   Fatal injury: 0, Serious Injury: 1, Slight Inj...  
4                                         (12316, 32)  
5                                        (12316, 142)  
6                                         (8621, 142)  
7                                         (3695, 142)  
8                                                   2  
9                                                  29  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               4724  
2025-02-24 01:19:38,336:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:19:38,341:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:19:38,487:INFO:Soft dependency imported: xgboost: 2.1.4
2025-02-24 01:19:38,492:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-24 01:19:38,496:INFO:setup() successfully completed in 7.34s...............
2025-02-24 01:19:38,497:INFO:Initializing compare_models()
2025-02-24 01:19:38,497:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-02-24 01:19:38,497:INFO:Checking exceptions
2025-02-24 01:19:38,518:INFO:Preparing display monitor
2025-02-24 01:19:38,582:INFO:Initializing Logistic Regression
2025-02-24 01:19:38,582:INFO:Total runtime is 5.539258321126302e-06 minutes
2025-02-24 01:19:38,594:INFO:SubProcess create_model() called ==================================
2025-02-24 01:19:38,595:INFO:Initializing create_model()
2025-02-24 01:19:38,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:19:38,596:INFO:Checking exceptions
2025-02-24 01:19:38,596:INFO:Importing libraries
2025-02-24 01:19:38,597:INFO:Copying training dataset
2025-02-24 01:19:38,617:INFO:Defining folds
2025-02-24 01:19:38,617:INFO:Declaring metric variables
2025-02-24 01:19:38,625:INFO:Importing untrained model
2025-02-24 01:19:38,639:INFO:Logistic Regression Imported successfully
2025-02-24 01:19:38,666:INFO:Starting cross validation
2025-02-24 01:19:38,686:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:19:52,332:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:19:52,344:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:52,373:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:52,388:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:19:52,404:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:52,591:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:19:52,603:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:52,624:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:52,645:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:53,326:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:19:53,335:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:53,351:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:53,360:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:19:53,370:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:53,540:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:19:53,550:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:53,570:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:53,589:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:53,847:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:19:53,856:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:53,874:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:53,887:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:19:53,899:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:54,043:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:19:54,056:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:54,078:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:54,099:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:54,997:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:19:55,009:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:55,030:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:55,049:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:56,012:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:19:56,025:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:56,044:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:56,056:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:19:56,066:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:56,438:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:19:56,446:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:56,461:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:56,468:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:19:56,475:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:56,572:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:19:56,581:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:56,596:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:56,614:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:19:56,649:INFO:Calculating mean and std
2025-02-24 01:19:56,653:INFO:Creating metrics dataframe
2025-02-24 01:19:56,661:INFO:Uploading results into container
2025-02-24 01:19:56,663:INFO:Uploading model into container now
2025-02-24 01:19:56,666:INFO:_master_model_container: 1
2025-02-24 01:19:56,666:INFO:_display_container: 2
2025-02-24 01:19:56,669:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-24 01:19:56,669:INFO:create_model() successfully completed......................................
2025-02-24 01:19:56,878:INFO:SubProcess create_model() end ==================================
2025-02-24 01:19:56,879:INFO:Creating metrics dataframe
2025-02-24 01:19:56,900:INFO:Initializing K Neighbors Classifier
2025-02-24 01:19:56,901:INFO:Total runtime is 0.30531370639801025 minutes
2025-02-24 01:19:56,914:INFO:SubProcess create_model() called ==================================
2025-02-24 01:19:56,915:INFO:Initializing create_model()
2025-02-24 01:19:56,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:19:56,916:INFO:Checking exceptions
2025-02-24 01:19:56,916:INFO:Importing libraries
2025-02-24 01:19:56,916:INFO:Copying training dataset
2025-02-24 01:19:56,944:INFO:Defining folds
2025-02-24 01:19:56,944:INFO:Declaring metric variables
2025-02-24 01:19:56,957:INFO:Importing untrained model
2025-02-24 01:19:56,972:INFO:K Neighbors Classifier Imported successfully
2025-02-24 01:19:57,001:INFO:Starting cross validation
2025-02-24 01:19:57,015:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:20:04,396:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:04,413:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:04,431:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:04,573:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:04,593:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:04,603:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:04,613:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:04,682:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:04,706:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:04,735:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:04,883:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:04,902:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:04,922:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:05,315:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:05,333:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:05,348:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:05,380:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:05,395:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:05,403:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:05,410:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:05,529:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:05,546:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:05,563:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:05,871:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:05,883:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:05,896:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:06,161:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:06,176:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:06,191:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:06,297:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:06,319:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:06,347:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:06,386:INFO:Calculating mean and std
2025-02-24 01:20:06,390:INFO:Creating metrics dataframe
2025-02-24 01:20:06,397:INFO:Uploading results into container
2025-02-24 01:20:06,400:INFO:Uploading model into container now
2025-02-24 01:20:06,402:INFO:_master_model_container: 2
2025-02-24 01:20:06,403:INFO:_display_container: 2
2025-02-24 01:20:06,403:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-24 01:20:06,405:INFO:create_model() successfully completed......................................
2025-02-24 01:20:06,612:INFO:SubProcess create_model() end ==================================
2025-02-24 01:20:06,612:INFO:Creating metrics dataframe
2025-02-24 01:20:06,640:INFO:Initializing Naive Bayes
2025-02-24 01:20:06,640:INFO:Total runtime is 0.467639688650767 minutes
2025-02-24 01:20:06,653:INFO:SubProcess create_model() called ==================================
2025-02-24 01:20:06,654:INFO:Initializing create_model()
2025-02-24 01:20:06,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:20:06,655:INFO:Checking exceptions
2025-02-24 01:20:06,655:INFO:Importing libraries
2025-02-24 01:20:06,655:INFO:Copying training dataset
2025-02-24 01:20:06,685:INFO:Defining folds
2025-02-24 01:20:06,687:INFO:Declaring metric variables
2025-02-24 01:20:06,698:INFO:Importing untrained model
2025-02-24 01:20:06,710:INFO:Naive Bayes Imported successfully
2025-02-24 01:20:06,739:INFO:Starting cross validation
2025-02-24 01:20:06,759:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:20:10,025:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,056:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,082:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,117:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,131:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,137:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,151:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,155:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,168:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,330:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,346:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,361:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,380:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,398:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,417:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,421:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,436:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,448:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,523:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,538:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,550:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,596:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,608:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,619:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,647:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,659:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,671:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,723:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,737:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,749:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:10,774:INFO:Calculating mean and std
2025-02-24 01:20:10,777:INFO:Creating metrics dataframe
2025-02-24 01:20:10,781:INFO:Uploading results into container
2025-02-24 01:20:10,782:INFO:Uploading model into container now
2025-02-24 01:20:10,783:INFO:_master_model_container: 3
2025-02-24 01:20:10,783:INFO:_display_container: 2
2025-02-24 01:20:10,783:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-24 01:20:10,783:INFO:create_model() successfully completed......................................
2025-02-24 01:20:10,914:INFO:SubProcess create_model() end ==================================
2025-02-24 01:20:10,914:INFO:Creating metrics dataframe
2025-02-24 01:20:10,936:INFO:Initializing Decision Tree Classifier
2025-02-24 01:20:10,936:INFO:Total runtime is 0.5392416675885519 minutes
2025-02-24 01:20:10,944:INFO:SubProcess create_model() called ==================================
2025-02-24 01:20:10,945:INFO:Initializing create_model()
2025-02-24 01:20:10,945:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:20:10,945:INFO:Checking exceptions
2025-02-24 01:20:10,945:INFO:Importing libraries
2025-02-24 01:20:10,945:INFO:Copying training dataset
2025-02-24 01:20:10,964:INFO:Defining folds
2025-02-24 01:20:10,965:INFO:Declaring metric variables
2025-02-24 01:20:10,972:INFO:Importing untrained model
2025-02-24 01:20:10,983:INFO:Decision Tree Classifier Imported successfully
2025-02-24 01:20:11,008:INFO:Starting cross validation
2025-02-24 01:20:11,032:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:20:13,840:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:13,859:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:13,878:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,033:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,054:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,073:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,132:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,149:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,166:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,212:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,228:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,244:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,279:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,295:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,310:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,328:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,333:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,343:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,346:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,357:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,359:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,760:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,764:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,766:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,771:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,775:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,778:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,782:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,786:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,789:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:14,815:INFO:Calculating mean and std
2025-02-24 01:20:14,818:INFO:Creating metrics dataframe
2025-02-24 01:20:14,823:INFO:Uploading results into container
2025-02-24 01:20:14,824:INFO:Uploading model into container now
2025-02-24 01:20:14,825:INFO:_master_model_container: 4
2025-02-24 01:20:14,825:INFO:_display_container: 2
2025-02-24 01:20:14,825:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-02-24 01:20:14,826:INFO:create_model() successfully completed......................................
2025-02-24 01:20:14,962:INFO:SubProcess create_model() end ==================================
2025-02-24 01:20:14,963:INFO:Creating metrics dataframe
2025-02-24 01:20:14,982:INFO:Initializing SVM - Linear Kernel
2025-02-24 01:20:14,982:INFO:Total runtime is 0.6066698392232259 minutes
2025-02-24 01:20:14,990:INFO:SubProcess create_model() called ==================================
2025-02-24 01:20:14,990:INFO:Initializing create_model()
2025-02-24 01:20:14,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:20:14,991:INFO:Checking exceptions
2025-02-24 01:20:14,991:INFO:Importing libraries
2025-02-24 01:20:14,991:INFO:Copying training dataset
2025-02-24 01:20:15,010:INFO:Defining folds
2025-02-24 01:20:15,010:INFO:Declaring metric variables
2025-02-24 01:20:15,021:INFO:Importing untrained model
2025-02-24 01:20:15,033:INFO:SVM - Linear Kernel Imported successfully
2025-02-24 01:20:15,055:INFO:Starting cross validation
2025-02-24 01:20:15,073:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:20:19,253:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:19,268:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:19,297:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:19,327:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:19,759:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:19,768:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:19,787:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:19,798:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:19,808:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:19,869:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:19,882:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:19,910:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:19,935:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:19,969:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:19,981:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:19,984:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:19,993:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:19,997:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,014:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,019:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,026:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:20,036:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,052:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:20,058:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,071:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,079:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:20,085:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,159:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:20,166:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,180:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,186:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:20,193:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,206:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:20,212:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,226:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,232:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:20,238:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,240:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,249:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,261:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,339:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:20,343:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,355:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,360:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:20,365:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:20,389:INFO:Calculating mean and std
2025-02-24 01:20:20,391:INFO:Creating metrics dataframe
2025-02-24 01:20:20,395:INFO:Uploading results into container
2025-02-24 01:20:20,397:INFO:Uploading model into container now
2025-02-24 01:20:20,397:INFO:_master_model_container: 5
2025-02-24 01:20:20,398:INFO:_display_container: 2
2025-02-24 01:20:20,399:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-24 01:20:20,399:INFO:create_model() successfully completed......................................
2025-02-24 01:20:20,532:INFO:SubProcess create_model() end ==================================
2025-02-24 01:20:20,532:INFO:Creating metrics dataframe
2025-02-24 01:20:20,549:INFO:Initializing Ridge Classifier
2025-02-24 01:20:20,550:INFO:Total runtime is 0.6994621157646179 minutes
2025-02-24 01:20:20,558:INFO:SubProcess create_model() called ==================================
2025-02-24 01:20:20,559:INFO:Initializing create_model()
2025-02-24 01:20:20,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:20:20,560:INFO:Checking exceptions
2025-02-24 01:20:20,560:INFO:Importing libraries
2025-02-24 01:20:20,560:INFO:Copying training dataset
2025-02-24 01:20:20,585:INFO:Defining folds
2025-02-24 01:20:20,585:INFO:Declaring metric variables
2025-02-24 01:20:20,594:INFO:Importing untrained model
2025-02-24 01:20:20,603:INFO:Ridge Classifier Imported successfully
2025-02-24 01:20:20,627:INFO:Starting cross validation
2025-02-24 01:20:20,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:20:23,401:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:23,412:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,432:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,443:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:23,453:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,468:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:23,478:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,504:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,518:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:23,531:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,581:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:23,591:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,613:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,624:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:23,635:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,645:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:23,655:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,674:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,684:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:23,693:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,883:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:23,890:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,903:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,911:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:23,916:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:23,920:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,926:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,945:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,953:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:23,959:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:23,995:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:24,002:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:24,016:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:24,024:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:24,032:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:24,147:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:24,154:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:24,169:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:24,177:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:24,185:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:24,211:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:24,219:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:24,234:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:24,242:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:24,249:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:24,266:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:24,273:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:24,285:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:24,290:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:24,296:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:24,316:INFO:Calculating mean and std
2025-02-24 01:20:24,317:INFO:Creating metrics dataframe
2025-02-24 01:20:24,321:INFO:Uploading results into container
2025-02-24 01:20:24,322:INFO:Uploading model into container now
2025-02-24 01:20:24,323:INFO:_master_model_container: 6
2025-02-24 01:20:24,324:INFO:_display_container: 2
2025-02-24 01:20:24,324:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-02-24 01:20:24,324:INFO:create_model() successfully completed......................................
2025-02-24 01:20:24,455:INFO:SubProcess create_model() end ==================================
2025-02-24 01:20:24,455:INFO:Creating metrics dataframe
2025-02-24 01:20:24,475:INFO:Initializing Random Forest Classifier
2025-02-24 01:20:24,475:INFO:Total runtime is 0.7648816188176473 minutes
2025-02-24 01:20:24,485:INFO:SubProcess create_model() called ==================================
2025-02-24 01:20:24,486:INFO:Initializing create_model()
2025-02-24 01:20:24,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:20:24,486:INFO:Checking exceptions
2025-02-24 01:20:24,486:INFO:Importing libraries
2025-02-24 01:20:24,486:INFO:Copying training dataset
2025-02-24 01:20:24,521:INFO:Defining folds
2025-02-24 01:20:24,521:INFO:Declaring metric variables
2025-02-24 01:20:24,534:INFO:Importing untrained model
2025-02-24 01:20:24,547:INFO:Random Forest Classifier Imported successfully
2025-02-24 01:20:24,574:INFO:Starting cross validation
2025-02-24 01:20:24,590:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:20:29,791:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:29,819:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:29,833:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:29,847:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:29,999:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,023:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,033:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:30,047:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,056:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,080:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,092:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:30,105:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,170:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,189:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,199:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:30,208:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,246:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,259:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,263:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,266:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:30,269:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,271:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,275:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,277:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,282:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,283:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:30,290:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,290:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:30,291:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,296:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,305:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,484:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,500:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,506:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:30,513:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,671:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,684:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,693:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:30,702:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:30,739:INFO:Calculating mean and std
2025-02-24 01:20:30,741:INFO:Creating metrics dataframe
2025-02-24 01:20:30,746:INFO:Uploading results into container
2025-02-24 01:20:30,747:INFO:Uploading model into container now
2025-02-24 01:20:30,749:INFO:_master_model_container: 7
2025-02-24 01:20:30,749:INFO:_display_container: 2
2025-02-24 01:20:30,750:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-24 01:20:30,750:INFO:create_model() successfully completed......................................
2025-02-24 01:20:30,913:INFO:SubProcess create_model() end ==================================
2025-02-24 01:20:30,913:INFO:Creating metrics dataframe
2025-02-24 01:20:30,935:INFO:Initializing Quadratic Discriminant Analysis
2025-02-24 01:20:30,935:INFO:Total runtime is 0.8725589315096537 minutes
2025-02-24 01:20:30,946:INFO:SubProcess create_model() called ==================================
2025-02-24 01:20:30,947:INFO:Initializing create_model()
2025-02-24 01:20:30,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:20:30,947:INFO:Checking exceptions
2025-02-24 01:20:30,947:INFO:Importing libraries
2025-02-24 01:20:30,947:INFO:Copying training dataset
2025-02-24 01:20:30,970:INFO:Defining folds
2025-02-24 01:20:30,970:INFO:Declaring metric variables
2025-02-24 01:20:30,978:INFO:Importing untrained model
2025-02-24 01:20:30,992:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-24 01:20:31,021:INFO:Starting cross validation
2025-02-24 01:20:31,035:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:20:33,049:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:20:33,071:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:20:33,250:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:20:33,269:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:20:33,318:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:20:33,522:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:20:33,717:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:20:33,936:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:33,946:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:33,970:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:33,984:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:33,995:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:33,998:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,010:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,038:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,054:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:34,070:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,184:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:34,192:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,210:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,221:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:34,231:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,284:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:34,294:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,317:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,327:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:34,338:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,505:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:34,512:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,528:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,530:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:20:34,540:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:20:34,543:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,547:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-24 01:20:34,597:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:34,605:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,620:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,629:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:34,638:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,676:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:34,683:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,698:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:34,705:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:34,712:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:35,089:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:35,094:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:35,106:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:35,120:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:35,164:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:35,170:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:35,178:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:35,184:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:35,184:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:35,190:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:35,196:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:35,196:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:35,202:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:20:35,208:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:35,230:INFO:Calculating mean and std
2025-02-24 01:20:35,233:INFO:Creating metrics dataframe
2025-02-24 01:20:35,238:INFO:Uploading results into container
2025-02-24 01:20:35,239:INFO:Uploading model into container now
2025-02-24 01:20:35,239:INFO:_master_model_container: 8
2025-02-24 01:20:35,240:INFO:_display_container: 2
2025-02-24 01:20:35,240:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-24 01:20:35,240:INFO:create_model() successfully completed......................................
2025-02-24 01:20:35,378:INFO:SubProcess create_model() end ==================================
2025-02-24 01:20:35,379:INFO:Creating metrics dataframe
2025-02-24 01:20:35,396:INFO:Initializing Ada Boost Classifier
2025-02-24 01:20:35,396:INFO:Total runtime is 0.9469076871871948 minutes
2025-02-24 01:20:35,407:INFO:SubProcess create_model() called ==================================
2025-02-24 01:20:35,409:INFO:Initializing create_model()
2025-02-24 01:20:35,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:20:35,409:INFO:Checking exceptions
2025-02-24 01:20:35,409:INFO:Importing libraries
2025-02-24 01:20:35,409:INFO:Copying training dataset
2025-02-24 01:20:35,436:INFO:Defining folds
2025-02-24 01:20:35,436:INFO:Declaring metric variables
2025-02-24 01:20:35,445:INFO:Importing untrained model
2025-02-24 01:20:35,455:INFO:Ada Boost Classifier Imported successfully
2025-02-24 01:20:35,477:INFO:Starting cross validation
2025-02-24 01:20:35,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:20:37,787:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:20:37,818:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:20:37,883:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:20:38,104:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:20:38,410:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:20:38,571:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:20:38,643:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:20:38,791:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:20:39,269:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:20:39,338:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-24 01:20:40,248:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:40,257:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,263:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:40,271:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,274:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,288:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,290:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,303:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,534:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:40,541:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,555:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,569:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,573:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:40,580:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,595:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,610:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,821:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:40,826:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,840:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,853:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,868:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:40,873:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,886:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,901:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,901:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:40,908:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,922:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:40,935:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:41,207:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:41,214:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:41,225:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:41,237:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:41,428:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:41,433:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:41,444:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:41,455:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:41,455:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:20:41,461:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:41,471:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:41,482:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:20:41,505:INFO:Calculating mean and std
2025-02-24 01:20:41,509:INFO:Creating metrics dataframe
2025-02-24 01:20:41,515:INFO:Uploading results into container
2025-02-24 01:20:41,516:INFO:Uploading model into container now
2025-02-24 01:20:41,517:INFO:_master_model_container: 9
2025-02-24 01:20:41,518:INFO:_display_container: 2
2025-02-24 01:20:41,519:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-02-24 01:20:41,519:INFO:create_model() successfully completed......................................
2025-02-24 01:20:41,650:INFO:SubProcess create_model() end ==================================
2025-02-24 01:20:41,650:INFO:Creating metrics dataframe
2025-02-24 01:20:41,666:INFO:Initializing Gradient Boosting Classifier
2025-02-24 01:20:41,666:INFO:Total runtime is 1.0513994057973226 minutes
2025-02-24 01:20:41,672:INFO:SubProcess create_model() called ==================================
2025-02-24 01:20:41,673:INFO:Initializing create_model()
2025-02-24 01:20:41,673:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:20:41,673:INFO:Checking exceptions
2025-02-24 01:20:41,673:INFO:Importing libraries
2025-02-24 01:20:41,673:INFO:Copying training dataset
2025-02-24 01:20:41,689:INFO:Defining folds
2025-02-24 01:20:41,690:INFO:Declaring metric variables
2025-02-24 01:20:41,696:INFO:Importing untrained model
2025-02-24 01:20:41,704:INFO:Gradient Boosting Classifier Imported successfully
2025-02-24 01:20:41,722:INFO:Starting cross validation
2025-02-24 01:20:41,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:21:00,282:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:00,289:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:00,306:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:00,321:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:00,616:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:00,623:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:00,640:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:00,658:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:00,853:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:00,862:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:00,883:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:00,905:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:01,126:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:01,133:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:01,147:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:01,161:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:01,471:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:01,478:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:01,491:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:01,503:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:01,679:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:01,686:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:01,699:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:01,713:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:01,884:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:01,889:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:01,900:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:01,912:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:02,569:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:02,575:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:02,586:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:02,598:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:03,022:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:03,028:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:03,039:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:03,050:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:03,581:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:03,587:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:03,600:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:03,612:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:03,637:INFO:Calculating mean and std
2025-02-24 01:21:03,639:INFO:Creating metrics dataframe
2025-02-24 01:21:03,642:INFO:Uploading results into container
2025-02-24 01:21:03,643:INFO:Uploading model into container now
2025-02-24 01:21:03,644:INFO:_master_model_container: 10
2025-02-24 01:21:03,644:INFO:_display_container: 2
2025-02-24 01:21:03,645:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-24 01:21:03,645:INFO:create_model() successfully completed......................................
2025-02-24 01:21:03,801:INFO:SubProcess create_model() end ==================================
2025-02-24 01:21:03,802:INFO:Creating metrics dataframe
2025-02-24 01:21:03,838:INFO:Initializing Linear Discriminant Analysis
2025-02-24 01:21:03,838:INFO:Total runtime is 1.4209374904632568 minutes
2025-02-24 01:21:03,850:INFO:SubProcess create_model() called ==================================
2025-02-24 01:21:03,851:INFO:Initializing create_model()
2025-02-24 01:21:03,851:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:21:03,852:INFO:Checking exceptions
2025-02-24 01:21:03,852:INFO:Importing libraries
2025-02-24 01:21:03,852:INFO:Copying training dataset
2025-02-24 01:21:03,873:INFO:Defining folds
2025-02-24 01:21:03,873:INFO:Declaring metric variables
2025-02-24 01:21:03,880:INFO:Importing untrained model
2025-02-24 01:21:03,895:INFO:Linear Discriminant Analysis Imported successfully
2025-02-24 01:21:03,918:INFO:Starting cross validation
2025-02-24 01:21:03,933:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:21:07,336:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:07,349:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,374:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,394:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:07,397:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:07,409:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,409:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,411:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,434:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,435:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,457:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,457:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,465:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:07,475:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,498:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,521:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,809:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:07,817:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,833:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,851:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,905:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:07,912:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,927:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:07,941:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,048:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:08,053:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,067:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,081:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,273:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:08,280:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,290:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,300:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,338:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:08,343:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,356:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,369:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,370:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-24 01:21:08,375:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,386:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,397:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:08,425:INFO:Calculating mean and std
2025-02-24 01:21:08,428:INFO:Creating metrics dataframe
2025-02-24 01:21:08,434:INFO:Uploading results into container
2025-02-24 01:21:08,435:INFO:Uploading model into container now
2025-02-24 01:21:08,436:INFO:_master_model_container: 11
2025-02-24 01:21:08,436:INFO:_display_container: 2
2025-02-24 01:21:08,437:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-24 01:21:08,437:INFO:create_model() successfully completed......................................
2025-02-24 01:21:08,569:INFO:SubProcess create_model() end ==================================
2025-02-24 01:21:08,569:INFO:Creating metrics dataframe
2025-02-24 01:21:08,594:INFO:Initializing Extra Trees Classifier
2025-02-24 01:21:08,595:INFO:Total runtime is 1.5002096970876058 minutes
2025-02-24 01:21:08,607:INFO:SubProcess create_model() called ==================================
2025-02-24 01:21:08,609:INFO:Initializing create_model()
2025-02-24 01:21:08,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:21:08,610:INFO:Checking exceptions
2025-02-24 01:21:08,610:INFO:Importing libraries
2025-02-24 01:21:08,610:INFO:Copying training dataset
2025-02-24 01:21:08,632:INFO:Defining folds
2025-02-24 01:21:08,633:INFO:Declaring metric variables
2025-02-24 01:21:08,640:INFO:Importing untrained model
2025-02-24 01:21:08,649:INFO:Extra Trees Classifier Imported successfully
2025-02-24 01:21:08,673:INFO:Starting cross validation
2025-02-24 01:21:08,693:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:21:14,271:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:14,303:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:14,318:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:21:14,330:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:14,647:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:14,675:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:14,689:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:21:14,702:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:14,959:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:14,995:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,009:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:21:15,023:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,046:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,071:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,084:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:21:15,095:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,096:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,107:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,115:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,122:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,129:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,138:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:21:15,139:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,141:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:21:15,150:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,153:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,156:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:21:15,172:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,238:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,250:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,254:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,256:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:21:15,262:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,268:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,274:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:21:15,280:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,618:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,630:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,635:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:21:15,640:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:15,656:INFO:Calculating mean and std
2025-02-24 01:21:15,659:INFO:Creating metrics dataframe
2025-02-24 01:21:15,665:INFO:Uploading results into container
2025-02-24 01:21:15,667:INFO:Uploading model into container now
2025-02-24 01:21:15,668:INFO:_master_model_container: 12
2025-02-24 01:21:15,668:INFO:_display_container: 2
2025-02-24 01:21:15,669:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-02-24 01:21:15,669:INFO:create_model() successfully completed......................................
2025-02-24 01:21:15,814:INFO:SubProcess create_model() end ==================================
2025-02-24 01:21:15,814:INFO:Creating metrics dataframe
2025-02-24 01:21:15,837:INFO:Initializing Extreme Gradient Boosting
2025-02-24 01:21:15,837:INFO:Total runtime is 1.6209206740061441 minutes
2025-02-24 01:21:15,844:INFO:SubProcess create_model() called ==================================
2025-02-24 01:21:15,845:INFO:Initializing create_model()
2025-02-24 01:21:15,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:21:15,845:INFO:Checking exceptions
2025-02-24 01:21:15,845:INFO:Importing libraries
2025-02-24 01:21:15,845:INFO:Copying training dataset
2025-02-24 01:21:15,865:INFO:Defining folds
2025-02-24 01:21:15,865:INFO:Declaring metric variables
2025-02-24 01:21:15,873:INFO:Importing untrained model
2025-02-24 01:21:15,884:INFO:Extreme Gradient Boosting Imported successfully
2025-02-24 01:21:15,900:INFO:Starting cross validation
2025-02-24 01:21:15,917:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:21:20,882:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:20,897:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:20,913:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:20,930:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:20,946:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:20,961:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,134:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,145:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,150:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,161:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,165:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,175:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,428:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,441:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,454:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,492:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,504:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,517:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,766:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,778:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,789:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,914:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,924:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,937:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:21,989:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:22,001:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:22,013:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:22,095:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:22,112:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:22,127:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:21:22,153:INFO:Calculating mean and std
2025-02-24 01:21:22,157:INFO:Creating metrics dataframe
2025-02-24 01:21:22,162:INFO:Uploading results into container
2025-02-24 01:21:22,163:INFO:Uploading model into container now
2025-02-24 01:21:22,165:INFO:_master_model_container: 13
2025-02-24 01:21:22,165:INFO:_display_container: 2
2025-02-24 01:21:22,167:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-02-24 01:21:22,167:INFO:create_model() successfully completed......................................
2025-02-24 01:21:22,307:INFO:SubProcess create_model() end ==================================
2025-02-24 01:21:22,307:INFO:Creating metrics dataframe
2025-02-24 01:21:22,324:INFO:Initializing Light Gradient Boosting Machine
2025-02-24 01:21:22,325:INFO:Total runtime is 1.7290463884671528 minutes
2025-02-24 01:21:22,331:INFO:SubProcess create_model() called ==================================
2025-02-24 01:21:22,331:INFO:Initializing create_model()
2025-02-24 01:21:22,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:21:22,332:INFO:Checking exceptions
2025-02-24 01:21:22,332:INFO:Importing libraries
2025-02-24 01:21:22,332:INFO:Copying training dataset
2025-02-24 01:21:22,350:INFO:Defining folds
2025-02-24 01:21:22,351:INFO:Declaring metric variables
2025-02-24 01:21:22,363:INFO:Importing untrained model
2025-02-24 01:21:22,375:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-24 01:21:22,396:INFO:Starting cross validation
2025-02-24 01:21:22,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:21:25,453:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2025-02-24 01:21:25,457:WARNING:Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1560, in fit
    super().fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1049, in fit
    self._Booster = train(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/engine.py", line 297, in train
    booster = Booster(params=params, train_set=train_set)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3656, in __init__
    train_set.construct()
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2590, in construct
    self._lazy_init(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2227, in _lazy_init
    return self.set_feature_name(feature_name)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3046, in set_feature_name
    _safe_call(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 313, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode("utf-8"))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2025-02-24 01:21:25,458:INFO:Initializing create_model()
2025-02-24 01:21:25,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:21:25,458:INFO:Checking exceptions
2025-02-24 01:21:25,459:INFO:Importing libraries
2025-02-24 01:21:25,459:INFO:Copying training dataset
2025-02-24 01:21:25,480:INFO:Defining folds
2025-02-24 01:21:25,481:INFO:Declaring metric variables
2025-02-24 01:21:25,489:INFO:Importing untrained model
2025-02-24 01:21:25,499:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-24 01:21:25,519:INFO:Starting cross validation
2025-02-24 01:21:25,534:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:21:28,539:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2025-02-24 01:21:28,540:ERROR:Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1560, in fit
    super().fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1049, in fit
    self._Booster = train(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/engine.py", line 297, in train
    booster = Booster(params=params, train_set=train_set)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3656, in __init__
    train_set.construct()
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2590, in construct
    self._lazy_init(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2227, in _lazy_init
    return self.set_feature_name(feature_name)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3046, in set_feature_name
    _safe_call(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 313, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode("utf-8"))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1560, in fit
    super().fit(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/sklearn.py", line 1049, in fit
    self._Booster = train(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/engine.py", line 297, in train
    booster = Booster(params=params, train_set=train_set)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3656, in __init__
    train_set.construct()
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2590, in construct
    self._lazy_init(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 2227, in _lazy_init
    return self.set_feature_name(feature_name)
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 3046, in set_feature_name
    _safe_call(
  File "/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/lightgbm/basic.py", line 313, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode("utf-8"))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2025-02-24 01:21:28,540:INFO:Initializing CatBoost Classifier
2025-02-24 01:21:28,540:INFO:Total runtime is 1.83264076312383 minutes
2025-02-24 01:21:28,547:INFO:SubProcess create_model() called ==================================
2025-02-24 01:21:28,548:INFO:Initializing create_model()
2025-02-24 01:21:28,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:21:28,548:INFO:Checking exceptions
2025-02-24 01:21:28,548:INFO:Importing libraries
2025-02-24 01:21:28,548:INFO:Copying training dataset
2025-02-24 01:21:28,567:INFO:Defining folds
2025-02-24 01:21:28,567:INFO:Declaring metric variables
2025-02-24 01:21:28,574:INFO:Importing untrained model
2025-02-24 01:21:28,582:INFO:CatBoost Classifier Imported successfully
2025-02-24 01:21:28,600:INFO:Starting cross validation
2025-02-24 01:21:28,613:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:22:18,234:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:18,252:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:18,271:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,347:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,372:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,392:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,453:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,478:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,500:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,919:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,939:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,942:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,958:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,962:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,972:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,983:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:20,988:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,003:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,066:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,078:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,091:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,138:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,150:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,162:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,239:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,249:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,250:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,260:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,261:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,270:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:21,289:INFO:Calculating mean and std
2025-02-24 01:22:21,291:INFO:Creating metrics dataframe
2025-02-24 01:22:21,295:INFO:Uploading results into container
2025-02-24 01:22:21,296:INFO:Uploading model into container now
2025-02-24 01:22:21,297:INFO:_master_model_container: 14
2025-02-24 01:22:21,297:INFO:_display_container: 2
2025-02-24 01:22:21,297:INFO:<catboost.core.CatBoostClassifier object at 0x7fa5a4f8ec10>
2025-02-24 01:22:21,297:INFO:create_model() successfully completed......................................
2025-02-24 01:22:21,441:INFO:SubProcess create_model() end ==================================
2025-02-24 01:22:21,441:INFO:Creating metrics dataframe
2025-02-24 01:22:21,461:INFO:Initializing Dummy Classifier
2025-02-24 01:22:21,461:INFO:Total runtime is 2.714655617872874 minutes
2025-02-24 01:22:21,468:INFO:SubProcess create_model() called ==================================
2025-02-24 01:22:21,469:INFO:Initializing create_model()
2025-02-24 01:22:21,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5a50734f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:22:21,469:INFO:Checking exceptions
2025-02-24 01:22:21,469:INFO:Importing libraries
2025-02-24 01:22:21,469:INFO:Copying training dataset
2025-02-24 01:22:21,487:INFO:Defining folds
2025-02-24 01:22:21,487:INFO:Declaring metric variables
2025-02-24 01:22:21,494:INFO:Importing untrained model
2025-02-24 01:22:21,503:INFO:Dummy Classifier Imported successfully
2025-02-24 01:22:21,525:INFO:Starting cross validation
2025-02-24 01:22:21,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:22:24,193:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,212:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,222:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:22:24,231:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,247:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,267:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,277:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:22:24,287:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,301:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,316:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,320:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,330:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:22:24,336:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,340:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,345:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:22:24,353:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,566:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,581:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,589:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:22:24,597:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,599:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,616:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,625:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:22:24,633:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,723:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,736:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,742:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:22:24,747:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,927:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,941:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,948:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,949:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:22:24,954:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,960:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:24,969:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:22:24,977:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:25,001:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:25,019:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:25,029:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:22:25,038:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:25,064:INFO:Calculating mean and std
2025-02-24 01:22:25,067:INFO:Creating metrics dataframe
2025-02-24 01:22:25,071:INFO:Uploading results into container
2025-02-24 01:22:25,072:INFO:Uploading model into container now
2025-02-24 01:22:25,073:INFO:_master_model_container: 15
2025-02-24 01:22:25,073:INFO:_display_container: 2
2025-02-24 01:22:25,074:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-02-24 01:22:25,074:INFO:create_model() successfully completed......................................
2025-02-24 01:22:25,208:INFO:SubProcess create_model() end ==================================
2025-02-24 01:22:25,209:INFO:Creating metrics dataframe
2025-02-24 01:22:25,228:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-24 01:22:25,249:INFO:Initializing create_model()
2025-02-24 01:22:25,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:22:25,250:INFO:Checking exceptions
2025-02-24 01:22:25,254:INFO:Importing libraries
2025-02-24 01:22:25,254:INFO:Copying training dataset
2025-02-24 01:22:25,276:INFO:Defining folds
2025-02-24 01:22:25,276:INFO:Declaring metric variables
2025-02-24 01:22:25,276:INFO:Importing untrained model
2025-02-24 01:22:25,277:INFO:Declaring custom model
2025-02-24 01:22:25,279:INFO:Random Forest Classifier Imported successfully
2025-02-24 01:22:25,294:INFO:Cross validation set to False
2025-02-24 01:22:25,294:INFO:Fitting Model
2025-02-24 01:22:27,107:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-24 01:22:27,107:INFO:create_model() successfully completed......................................
2025-02-24 01:22:27,302:INFO:_master_model_container: 15
2025-02-24 01:22:27,302:INFO:_display_container: 2
2025-02-24 01:22:27,303:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-24 01:22:27,303:INFO:compare_models() successfully completed......................................
2025-02-24 01:22:27,425:INFO:Initializing get_config()
2025-02-24 01:22:27,426:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, variable=X_train)
2025-02-24 01:22:27,426:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-24 01:22:27,427:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-24 01:22:27,472:INFO:Variable:  returned as                       Time Day_of_week Age_band_of_driver Sex_of_driver  \
9441   1900-01-01 20:00:00    Thursday              31-50          Male   
7919   1900-01-01 12:58:00    Thursday              18-30          Male   
7172   1900-01-01 00:25:00    Saturday              18-30          Male   
9252   1900-01-01 17:30:00     Tuesday            Over 51          Male   
7149   1900-01-01 19:58:00     Tuesday            Over 51          Male   
...                    ...         ...                ...           ...   
8512   1900-01-01 15:20:00    Thursday              18-30          Male   
1481   1900-01-01 13:00:00      Sunday              31-50          Male   
3580   1900-01-01 14:30:00     Tuesday              18-30        Female   
10051  1900-01-01 20:55:00      Friday            Over 51          Male   
6713   1900-01-01 22:45:00    Saturday              18-30          Male   

         Educational_level Vehicle_driver_relation Driving_experience  \
9441   Secondary education                Employee              1-2yr   
7919     Primary education                Employee              2-5yr   
7172   Secondary education                   Owner              2-5yr   
9252   Secondary education                Employee         Above 10yr   
7149   Secondary education                Employee             5-10yr   
...                    ...                     ...                ...   
8512   Secondary education                Employee              2-5yr   
1481     Primary education                Employee             5-10yr   
3580   Secondary education                Employee             5-10yr   
10051  Secondary education                Employee             5-10yr   
6713     Primary education                Employee             5-10yr   

      Type_of_vehicle Owner_of_vehicle Service_year_of_vehicle  ...  \
9441              Car            Owner        Moderate Vehicle  ...   
7919              Car            Owner        Moderate Vehicle  ...   
7172        Small Bus            Owner        Moderate Vehicle  ...   
9252      Large Truck            Owner             Old Vehicle  ...   
7149              Car     Governmental        Moderate Vehicle  ...   
...               ...              ...                     ...  ...   
8512        Large Bus            Owner        Moderate Vehicle  ...   
1481      Large Truck            Owner        Moderate Vehicle  ...   
3580      Large Truck            Owner             New Vehicle  ...   
10051             Car            Owner        Moderate Vehicle  ...   
6713              Car            Owner        Moderate Vehicle  ...   

      Vehicle_movement   Casualty_class Sex_of_casualty Age_band_of_casualty  \
9441    Moving forward  Driver or rider            Male                18-30   
7919    Moving forward  Driver or rider            Male                31-50   
7172    Moving forward       Pedestrian          Female                18-30   
9252    Moving forward       Pedestrian            Male             Under 18   
7149          Stopping       Pedestrian          Female                18-30   
...                ...              ...             ...                  ...   
8512    Moving forward       Pedestrian          Female                18-30   
1481    Moving forward  Driver or rider            Male                18-30   
3580    Moving forward  Driver or rider            Male                18-30   
10051   Moving forward  Driver or rider            Male                18-30   
6713   Moving backward       Pedestrian          Female                18-30   

      Casualty_severity Work_of_casuality Fitness_of_casuality  \
9441                 na           Unknown               Normal   
7919                  3     Self-employed               Normal   
7172                  3            Driver               Normal   
9252                  3     Self-employed               Normal   
7149                  3            Driver               Normal   
...                 ...               ...                  ...   
8512                  3            Driver               Normal   
1481                  3     Self-employed               Normal   
3580                  3     Self-employed               Normal   
10051                na            Driver               Normal   
6713                  3            Driver               Normal   

                                     Pedestrian_movement Cause_of_accident  \
9441                                    Not a Pedestrian       Human Error   
7919                                    Not a Pedestrian       Human Error   
7172   Crossing from nearside - masked by parked or s...       Human Error   
9252                                    Unknown or other         Violation   
7149                                    Not a Pedestrian    Vehicle Issues   
...                                                  ...               ...   
8512   Crossing from nearside - masked by parked or s...       Human Error   
1481                                    Not a Pedestrian         Violation   
3580                                    Not a Pedestrian       Human Error   
10051                                   Not a Pedestrian       Human Error   
6713                                    Not a Pedestrian       Human Error   

       part_of_day  
9441         Malam  
7919         Siang  
7172         Malam  
9252          Sore  
7149         Malam  
...            ...  
8512          Sore  
1481         Siang  
3580         Siang  
10051        Malam  
6713         Malam  

[8621 rows x 31 columns]
2025-02-24 01:22:27,473:INFO:get_config() successfully completed......................................
2025-02-24 01:22:27,648:INFO:Initializing create_model()
2025-02-24 01:22:27,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:22:27,648:INFO:Checking exceptions
2025-02-24 01:22:27,697:INFO:Importing libraries
2025-02-24 01:22:27,698:INFO:Copying training dataset
2025-02-24 01:22:27,734:INFO:Defining folds
2025-02-24 01:22:27,734:INFO:Declaring metric variables
2025-02-24 01:22:27,748:INFO:Importing untrained model
2025-02-24 01:22:27,764:INFO:Extreme Gradient Boosting Imported successfully
2025-02-24 01:22:27,790:INFO:Starting cross validation
2025-02-24 01:22:27,807:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:22:33,250:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,266:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,282:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,348:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,363:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,378:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,398:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,416:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,433:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,635:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,642:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,651:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,656:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,666:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,671:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,804:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,818:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,831:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,966:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,980:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:33,997:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:34,264:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:34,279:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:34,294:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:34,383:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:34,397:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:34,410:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:34,423:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:34,436:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:34,449:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:22:34,478:INFO:Calculating mean and std
2025-02-24 01:22:34,483:INFO:Creating metrics dataframe
2025-02-24 01:22:34,496:INFO:Finalizing model
2025-02-24 01:23:09,626:INFO:Uploading results into container
2025-02-24 01:23:09,631:INFO:Uploading model into container now
2025-02-24 01:23:09,695:INFO:_master_model_container: 16
2025-02-24 01:23:09,696:INFO:_display_container: 3
2025-02-24 01:23:09,700:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-02-24 01:23:09,701:INFO:create_model() successfully completed......................................
2025-02-24 01:23:09,836:INFO:Initializing tune_model()
2025-02-24 01:23:09,837:INFO:tune_model(estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>)
2025-02-24 01:23:09,837:INFO:Checking exceptions
2025-02-24 01:23:09,868:INFO:Copying training dataset
2025-02-24 01:23:09,880:INFO:Checking base model
2025-02-24 01:23:09,881:INFO:Base model : Extreme Gradient Boosting
2025-02-24 01:23:09,888:INFO:Declaring metric variables
2025-02-24 01:23:09,896:INFO:Defining Hyperparameters
2025-02-24 01:23:10,059:INFO:Tuning with n_jobs=-1
2025-02-24 01:23:10,059:INFO:Initializing RandomizedSearchCV
2025-02-24 01:24:06,595:INFO:best_params: {'actual_estimator__subsample': 1, 'actual_estimator__scale_pos_weight': 32.9, 'actual_estimator__reg_lambda': 0.4, 'actual_estimator__reg_alpha': 0.1, 'actual_estimator__n_estimators': 200, 'actual_estimator__min_child_weight': 2, 'actual_estimator__max_depth': 6, 'actual_estimator__learning_rate': 0.0001, 'actual_estimator__colsample_bytree': 0.7}
2025-02-24 01:24:06,597:INFO:Hyperparameter search completed
2025-02-24 01:24:06,597:INFO:SubProcess create_model() called ==================================
2025-02-24 01:24:06,598:INFO:Initializing create_model()
2025-02-24 01:24:06,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fa5e0035280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 1, 'scale_pos_weight': 32.9, 'reg_lambda': 0.4, 'reg_alpha': 0.1, 'n_estimators': 200, 'min_child_weight': 2, 'max_depth': 6, 'learning_rate': 0.0001, 'colsample_bytree': 0.7})
2025-02-24 01:24:06,599:INFO:Checking exceptions
2025-02-24 01:24:06,599:INFO:Importing libraries
2025-02-24 01:24:06,599:INFO:Copying training dataset
2025-02-24 01:24:06,618:INFO:Defining folds
2025-02-24 01:24:06,618:INFO:Declaring metric variables
2025-02-24 01:24:06,625:INFO:Importing untrained model
2025-02-24 01:24:06,625:INFO:Declaring custom model
2025-02-24 01:24:06,633:INFO:Extreme Gradient Boosting Imported successfully
2025-02-24 01:24:06,642:INFO:Starting cross validation
2025-02-24 01:24:06,651:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:24:12,693:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,705:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,711:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:24:12,716:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,795:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,811:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,827:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,885:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,896:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,907:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,935:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,945:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,948:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,956:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,959:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:12,970:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,090:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,101:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,107:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-24 01:24:13,113:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,240:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,252:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,263:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,509:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,521:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,533:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,739:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,749:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,760:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,793:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,802:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,809:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:24:13,823:INFO:Calculating mean and std
2025-02-24 01:24:13,824:INFO:Creating metrics dataframe
2025-02-24 01:24:13,832:INFO:Finalizing model
2025-02-24 01:26:24,034:INFO:Uploading results into container
2025-02-24 01:26:24,038:INFO:Uploading model into container now
2025-02-24 01:26:24,041:INFO:_master_model_container: 17
2025-02-24 01:26:24,042:INFO:_display_container: 4
2025-02-24 01:26:24,048:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.0001, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=6, max_leaves=None,
              min_child_weight=2, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=200, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-02-24 01:26:24,048:INFO:create_model() successfully completed......................................
2025-02-24 01:26:24,240:INFO:SubProcess create_model() end ==================================
2025-02-24 01:26:24,240:INFO:choose_better activated
2025-02-24 01:26:24,247:INFO:SubProcess create_model() called ==================================
2025-02-24 01:26:24,249:INFO:Initializing create_model()
2025-02-24 01:26:24,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 01:26:24,249:INFO:Checking exceptions
2025-02-24 01:26:24,251:INFO:Importing libraries
2025-02-24 01:26:24,252:INFO:Copying training dataset
2025-02-24 01:26:24,266:INFO:Defining folds
2025-02-24 01:26:24,267:INFO:Declaring metric variables
2025-02-24 01:26:24,267:INFO:Importing untrained model
2025-02-24 01:26:24,267:INFO:Declaring custom model
2025-02-24 01:26:24,270:INFO:Extreme Gradient Boosting Imported successfully
2025-02-24 01:26:24,271:INFO:Starting cross validation
2025-02-24 01:26:24,281:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 01:26:29,947:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:29,966:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:29,994:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,524:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,542:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,558:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,559:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,575:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,594:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,627:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,654:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,654:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,675:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,678:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,691:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,749:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,765:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,783:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,894:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,908:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,918:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,923:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,934:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,950:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,968:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,982:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:30,995:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:31,231:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:31,243:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:31,255:WARNING:/home/ahmadnafim/anaconda3/envs/bcc_intern/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-24 01:26:31,278:INFO:Calculating mean and std
2025-02-24 01:26:31,279:INFO:Creating metrics dataframe
2025-02-24 01:26:31,283:INFO:Finalizing model
2025-02-24 01:27:41,011:INFO:Uploading results into container
2025-02-24 01:27:41,021:INFO:Uploading model into container now
2025-02-24 01:27:41,027:INFO:_master_model_container: 18
2025-02-24 01:27:41,028:INFO:_display_container: 5
2025-02-24 01:27:41,037:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-02-24 01:27:41,037:INFO:create_model() successfully completed......................................
2025-02-24 01:27:41,248:INFO:SubProcess create_model() end ==================================
2025-02-24 01:27:41,251:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...) result for Accuracy is 0.8515
2025-02-24 01:27:41,253:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.0001, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=6, max_leaves=None,
              min_child_weight=2, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=200, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...) result for Accuracy is 0.8537
2025-02-24 01:27:41,254:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.0001, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=6, max_leaves=None,
              min_child_weight=2, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=200, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...) is best model
2025-02-24 01:27:41,254:INFO:choose_better completed
2025-02-24 01:27:41,279:INFO:_master_model_container: 18
2025-02-24 01:27:41,279:INFO:_display_container: 4
2025-02-24 01:27:41,281:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.0001, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=6, max_leaves=None,
              min_child_weight=2, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=200, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-02-24 01:27:41,281:INFO:tune_model() successfully completed......................................
2025-02-24 01:27:41,432:INFO:Initializing evaluate_model()
2025-02-24 01:27:41,433:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.0001, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=6, max_leaves=None,
              min_child_weight=2, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=200, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-24 01:27:41,458:INFO:Initializing plot_model()
2025-02-24 01:27:41,458:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.0001, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=6, max_leaves=None,
              min_child_weight=2, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=200, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, system=True)
2025-02-24 01:27:41,459:INFO:Checking exceptions
2025-02-24 01:27:41,472:INFO:Preloading libraries
2025-02-24 01:27:41,526:INFO:Copying training dataset
2025-02-24 01:27:41,526:INFO:Plot type: pipeline
2025-02-24 01:27:42,072:INFO:Visual Rendered Successfully
2025-02-24 01:27:42,241:INFO:plot_model() successfully completed......................................
2025-02-24 01:28:07,079:INFO:Initializing plot_model()
2025-02-24 01:28:07,079:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.0001, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=6, max_leaves=None,
              min_child_weight=2, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=200, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, system=True)
2025-02-24 01:28:07,079:INFO:Checking exceptions
2025-02-24 01:28:07,090:INFO:Preloading libraries
2025-02-24 01:28:07,150:INFO:Copying training dataset
2025-02-24 01:28:07,151:INFO:Plot type: parameter
2025-02-24 01:28:07,187:INFO:Visual Rendered Successfully
2025-02-24 01:28:07,411:INFO:plot_model() successfully completed......................................
2025-02-24 01:28:10,373:INFO:Initializing plot_model()
2025-02-24 01:28:10,374:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.0001, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=6, max_leaves=None,
              min_child_weight=2, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=200, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, system=True)
2025-02-24 01:28:10,374:INFO:Checking exceptions
2025-02-24 01:28:11,365:INFO:Initializing plot_model()
2025-02-24 01:28:11,365:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.0001, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=6, max_leaves=None,
              min_child_weight=2, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=200, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, system=True)
2025-02-24 01:28:11,366:INFO:Checking exceptions
2025-02-24 01:28:11,380:INFO:Preloading libraries
2025-02-24 01:28:11,435:INFO:Copying training dataset
2025-02-24 01:28:11,436:INFO:Plot type: vc
2025-02-24 01:28:11,441:INFO:Determining param_name
2025-02-24 01:28:11,443:INFO:param_name: max_depth
2025-02-24 01:28:12,103:INFO:Fitting Model
2025-02-24 01:28:44,776:INFO:Visual Rendered Successfully
2025-02-24 01:28:44,918:INFO:plot_model() successfully completed......................................
2025-02-24 01:28:45,106:INFO:Initializing plot_model()
2025-02-24 01:28:45,106:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.0001, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=6, max_leaves=None,
              min_child_weight=2, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=200, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fa5a4ba0d30>, system=True)
2025-02-24 01:28:45,106:INFO:Checking exceptions
2025-02-24 01:28:45,116:INFO:Preloading libraries
2025-02-24 01:28:45,138:INFO:Copying training dataset
2025-02-24 01:28:45,139:INFO:Plot type: confusion_matrix
2025-02-24 01:28:45,625:INFO:Fitting Model
2025-02-24 01:28:45,627:INFO:Scoring test/hold-out set
2025-02-24 01:28:45,884:INFO:Visual Rendered Successfully
2025-02-24 01:28:45,991:INFO:plot_model() successfully completed......................................
